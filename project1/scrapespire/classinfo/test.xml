<?xml version="1.0" encoding="utf-8"?>
<items><item><name>COMPSCI     H250 - 01   Intro To Computation (colloq)</name><class_number>62766</class_number><units>1</units><career>*University</career><grading>Letter-Grading for Undergraduate Students</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>We 2:30PM - 3:30PM We 10:00AM - 10:50AM</date><room>Computer Science Bldg rm 140</room><instructor>David Barrington</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Instructor Consent Required</add_consent><description>Description not available at this time</description></item><item><name>COMPSCI     H403 - 01   Intro to Robotics (colloq)</name><class_number>62494</class_number><units>1</units><career>*University</career><grading>Letter-Grading for Undergraduate Students</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Tu 2:30PM - 3:20PM</date><room>Computer Science Bldg rm 140</room><instructor>Joydeep Biswas</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Instructor Consent Required</add_consent><description>Description not available at this time</description></item><item><name>COMPSCI     HI326 - 01   Web Programming HnrsInd</name><class_number>62679</class_number><units>1 - 2</units><career>*University</career><grading>Letter-Grading for Undergraduate Students</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TBA TBA TBA TBA TBA TuTh 11:30AM - 12:45PM</date><room>TBA</room><instructor>Timothy Richards</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>How computers can help solve problems efficiently and effectively. Broad introduction to hardware and software aspects of microcomputers. Four application areas: word processing, spreadsheets, databases, and telecommunications (access to the Internet). Students more interested in programming should take COMPSCI 121. Prerequisites: reasonable high school math skills. Typing ability an important asset.  (Gen.Ed. R2)</description></item><item><name>COMPSCI  119 - 01   Intro to Programming</name><class_number>55444</class_number><units>3</units><career>*University</career><grading>Letter Grading with option of Pass/Fail Grading</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>MoWeFr 1:25PM - 2:15PM</date><room>Integ. Learning Center S211</room><instructor>William Verts</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>An introduction to computer programming with multimedia applications. Students will create Python programs to process image, video, and audio data. No prior programming experience expected. Not open to Computer Science majors.</description></item><item><name>COMPSCI  121 - 01   Intro Problem Solving W/Comp</name><class_number>55409</class_number><units>4</units><career>*University</career><grading>Letter Grading with option of Pass/Fail Grading</grading><gened>R2</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Tu 11:30AM - 12:45PM</date><room>Integ. Learning Center N151</room><instructor>Gordon Anderson, Neena Thota</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>An introductory course in problem solving, using the programming language Java. Focuses on the fundamental concepts of problem solving and on computer implementation. Satisfactory completion is a prerequisite for all higher-level computer science courses. Use of computer required. Prerequisite: high school algebra and basic math skills (R1).  (Gen.Ed. R2)</description></item><item><name>COMPSCI  121 - 02   Intro Problem Solving W/Comp</name><class_number>61982</class_number><units>4</units><career>*University</career><grading>Letter Grading with option of Pass/Fail Grading</grading><gened>R2</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Th 11:30AM - 12:45PM</date><room>Integ. Learning Center N151</room><instructor>Gordon Anderson, Neena Thota</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>An introductory course in problem solving, using the programming language Java. Focuses on the fundamental concepts of problem solving and on computer implementation. Satisfactory completion is a prerequisite for all higher-level computer science courses. Use of computer required. Prerequisite: high school algebra and basic math skills (R1).  (Gen.Ed. R2)</description></item><item><name>COMPSCI  121 - 99LL   Intro Problem Solving W/Comp</name><class_number>55451</class_number><career>*University</career><grading> </grading><gened>R2</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Fr 2:30PM - 3:20PM</date><room>Marston Hall room 132</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>An introductory course in problem solving, using the programming language Java. Focuses on the fundamental concepts of problem solving and on computer implementation. Satisfactory completion is a prerequisite for all higher-level computer science courses. Use of computer required. Prerequisite: high school algebra and basic math skills (R1).  (Gen.Ed. R2)</description></item><item><name>COMPSCI  121 - 99LM   Intro Problem Solving W/Comp</name><class_number>55452</class_number><career>*University</career><grading> </grading><gened>R2</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Fr 2:30PM - 3:20PM</date><room>Flint Lab room 201</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>An introductory course in problem solving, using the programming language Java. Focuses on the fundamental concepts of problem solving and on computer implementation. Satisfactory completion is a prerequisite for all higher-level computer science courses. Use of computer required. Prerequisite: high school algebra and basic math skills (R1).  (Gen.Ed. R2)</description></item><item><name>COMPSCI  121 - 99LN   Intro Problem Solving W/Comp</name><class_number>55453</class_number><career>*University</career><grading> </grading><gened>R2</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Fr 2:30PM - 3:20PM</date><room>Goessmann Lab Addtn rm 151</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>An introductory course in problem solving, using the programming language Java. Focuses on the fundamental concepts of problem solving and on computer implementation. Satisfactory completion is a prerequisite for all higher-level computer science courses. Use of computer required. Prerequisite: high school algebra and basic math skills (R1).  (Gen.Ed. R2)</description></item><item><name>COMPSCI  121 - 99LQ   Intro Problem Solving W/Comp</name><class_number>55454</class_number><career>*University</career><grading> </grading><gened>R2</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Fr 1:25PM - 2:15PM</date><room>Engineering Laboratory rm 323</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>An introductory course in problem solving, using the programming language Java. Focuses on the fundamental concepts of problem solving and on computer implementation. Satisfactory completion is a prerequisite for all higher-level computer science courses. Use of computer required. Prerequisite: high school algebra and basic math skills (R1).  (Gen.Ed. R2)</description></item><item><name>COMPSCI  121 - 99LR   Intro Problem Solving W/Comp</name><class_number>55455</class_number><career>*University</career><grading> </grading><gened>R2</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Fr 1:25PM - 2:15PM</date><room>Engineering Laboratory rm 304</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>An introductory course in problem solving, using the programming language Java. Focuses on the fundamental concepts of problem solving and on computer implementation. Satisfactory completion is a prerequisite for all higher-level computer science courses. Use of computer required. Prerequisite: high school algebra and basic math skills (R1).  (Gen.Ed. R2)</description></item><item><name>COMPSCI  121 - 99LS   Intro Problem Solving W/Comp</name><class_number>55535</class_number><career>*University</career><grading> </grading><gened>R2</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Fr 1:25PM - 2:15PM</date><room>Flint Lab room 201</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>An introductory course in problem solving, using the programming language Java. Focuses on the fundamental concepts of problem solving and on computer implementation. Satisfactory completion is a prerequisite for all higher-level computer science courses. Use of computer required. Prerequisite: high school algebra and basic math skills (R1).  (Gen.Ed. R2)</description></item><item><name>COMPSCI  121 - 99LU   Intro Problem Solving W/Comp</name><class_number>55536</class_number><career>*University</career><grading> </grading><gened>R2</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Fr 11:15AM - 12:05PM</date><room>Flint Laboratory room 105</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>An introductory course in problem solving, using the programming language Java. Focuses on the fundamental concepts of problem solving and on computer implementation. Satisfactory completion is a prerequisite for all higher-level computer science courses. Use of computer required. Prerequisite: high school algebra and basic math skills (R1).  (Gen.Ed. R2)</description></item><item><name>COMPSCI  121 - 99LV   Intro Problem Solving W/Comp</name><class_number>55537</class_number><career>*University</career><grading> </grading><gened>R2</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Fr 11:15AM - 12:05PM</date><room>Tobin Hall room 204</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>An introductory course in problem solving, using the programming language Java. Focuses on the fundamental concepts of problem solving and on computer implementation. Satisfactory completion is a prerequisite for all higher-level computer science courses. Use of computer required. Prerequisite: high school algebra and basic math skills (R1).  (Gen.Ed. R2)</description></item><item><name>COMPSCI  121 - 99LW   Intro Problem Solving W/Comp</name><class_number>55538</class_number><career>*University</career><grading> </grading><gened>R2</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Fr 12:20PM - 1:10PM</date><room>Flint Lab room 201</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>An introductory course in problem solving, using the programming language Java. Focuses on the fundamental concepts of problem solving and on computer implementation. Satisfactory completion is a prerequisite for all higher-level computer science courses. Use of computer required. Prerequisite: high school algebra and basic math skills (R1).  (Gen.Ed. R2)</description></item><item><name>COMPSCI  121 - 99LX   Intro Problem Solving W/Comp</name><class_number>55539</class_number><career>*University</career><grading> </grading><gened>R2</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Fr 12:20PM - 1:10PM</date><room>Lederle Grad Res Tower rm 121</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>An introductory course in problem solving, using the programming language Java. Focuses on the fundamental concepts of problem solving and on computer implementation. Satisfactory completion is a prerequisite for all higher-level computer science courses. Use of computer required. Prerequisite: high school algebra and basic math skills (R1).  (Gen.Ed. R2)</description></item><item><name>COMPSCI  145 - 01   Rep, Storing &amp;amp; Retrieving Info</name><class_number>55456</class_number><units>3</units><career>*University</career><grading>Letter Grading with option of Pass/Fail Grading</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>MoWeFr 11:15AM - 12:05PM</date><room>Integ. Learning Center N101</room><instructor>William Verts</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>The use of data in computer systems.  Formats for representing text, sound, images, ets. as strings of bits.  Basic information theory, use and limitations of file compression.  PreRequisite: R1</description></item><item><name>COMPSCI  186 - 01   Using Data Structures</name><class_number>55531</class_number><units>4</units><career>*University</career><grading>Letter Grading with option of Pass/Fail Grading</grading><gened>R2</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TuTh 2:30PM - 3:45PM</date><room>Goessmann Lab. Add rm 64</room><instructor>David Wemhoener, Neena Thota</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>This course introduces foundational abstract data types and algorithms. The main focus is on the use of data structures in designing and developing programs to solve problems in a variety of domains. Specific topics include lists, sets, maps, graphs, stacks, queues, searching, and sorting. (Gen Ed R2)Prerequisites: COMPSCI 121 (or equivalent experience) and Basic Math Skills (R1). This course is not a substitute for COMPSCI 187. If unsure of whether this course or COMPSCI 187 is more appropriate, contact instructor.</description></item><item><name>COMPSCI  186 - 01AA   Using Data Structures</name><class_number>55532</class_number><career>*University</career><grading> </grading><gened>R2</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Mo 12:20PM - 1:10PM</date><room>Marston Hall room 220</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>This course introduces foundational abstract data types and algorithms. The main focus is on the use of data structures in designing and developing programs to solve problems in a variety of domains. Specific topics include lists, sets, maps, graphs, stacks, queues, searching, and sorting. (Gen Ed R2)Prerequisites: COMPSCI 121 (or equivalent experience) and Basic Math Skills (R1). This course is not a substitute for COMPSCI 187. If unsure of whether this course or COMPSCI 187 is more appropriate, contact instructor.</description></item><item><name>COMPSCI  186 - 01AB   Using Data Structures</name><class_number>55533</class_number><career>*University</career><grading> </grading><gened>R2</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Mo 10:10AM - 11:00AM</date><room>Engineering Laboratory rm 325</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>This course introduces foundational abstract data types and algorithms. The main focus is on the use of data structures in designing and developing programs to solve problems in a variety of domains. Specific topics include lists, sets, maps, graphs, stacks, queues, searching, and sorting. (Gen Ed R2)Prerequisites: COMPSCI 121 (or equivalent experience) and Basic Math Skills (R1). This course is not a substitute for COMPSCI 187. If unsure of whether this course or COMPSCI 187 is more appropriate, contact instructor.</description></item><item><name>COMPSCI  186 - 01AC   Using Data Structures</name><class_number>55534</class_number><career>*University</career><grading> </grading><gened>R2</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Mo 9:05AM - 9:55AM</date><room>Engineering Laboratory rm 325</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>This course introduces foundational abstract data types and algorithms. The main focus is on the use of data structures in designing and developing programs to solve problems in a variety of domains. Specific topics include lists, sets, maps, graphs, stacks, queues, searching, and sorting. (Gen Ed R2)Prerequisites: COMPSCI 121 (or equivalent experience) and Basic Math Skills (R1). This course is not a substitute for COMPSCI 187. If unsure of whether this course or COMPSCI 187 is more appropriate, contact instructor.</description></item><item><name>COMPSCI  187 - 01   Programming w/Data Structures</name><class_number>55410</class_number><units>4</units><career>*University</career><grading>Letter Grading with option of Pass/Fail Grading</grading><gened>R2</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TuTh 2:30PM - 3:45PM</date><room>Integrated Sciences Bldg 135</room><instructor>Mark Corner</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>This course introduces and develops methods for designing and implementing abstract data types using the Java programming language. The main focus is on how to build and encapsulate data objects and their associated operations. Specific topics include linked structures, recursive structures and algorithms, binary trees, balanced trees, and hash tables. These topics are fundamental to programming and are essential to other courses in computer science. The course involves weekly programming assignments, in-class quizzes, discussion section exercises, and multiple exams.</description></item><item><name>COMPSCI  187 - 01LL   Programming w/Data Structures</name><class_number>55448</class_number><career>*University</career><grading> </grading><gened>R2</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Mo 10:10AM - 11:00AM</date><room>Lederle Grad Res Tower 223</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>This course introduces and develops methods for designing and implementing abstract data types using the Java programming language. The main focus is on how to build and encapsulate data objects and their associated operations. Specific topics include linked structures, recursive structures and algorithms, binary trees, balanced trees, and hash tables. These topics are fundamental to programming and are essential to other courses in computer science. The course involves weekly programming assignments, in-class quizzes, discussion section exercises, and multiple exams.</description></item><item><name>COMPSCI  187 - 01LM   Programming w/Data Structures</name><class_number>55457</class_number><career>*University</career><grading> </grading><gened>R2</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Mo 11:15AM - 12:05PM</date><room>Lederle Grad Res Tower 223</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>This course introduces and develops methods for designing and implementing abstract data types using the Java programming language. The main focus is on how to build and encapsulate data objects and their associated operations. Specific topics include linked structures, recursive structures and algorithms, binary trees, balanced trees, and hash tables. These topics are fundamental to programming and are essential to other courses in computer science. The course involves weekly programming assignments, in-class quizzes, discussion section exercises, and multiple exams.</description></item><item><name>COMPSCI  187 - 01LN   Programming w/Data Structures</name><class_number>55458</class_number><career>*University</career><grading> </grading><gened>R2</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Mo 1:25PM - 2:15PM</date><room>Lederle Grad Res Tower 223</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>This course introduces and develops methods for designing and implementing abstract data types using the Java programming language. The main focus is on how to build and encapsulate data objects and their associated operations. Specific topics include linked structures, recursive structures and algorithms, binary trees, balanced trees, and hash tables. These topics are fundamental to programming and are essential to other courses in computer science. The course involves weekly programming assignments, in-class quizzes, discussion section exercises, and multiple exams.</description></item><item><name>COMPSCI  187 - 01LQ   Programming w/Data Structures</name><class_number>55459</class_number><career>*University</career><grading> </grading><gened>R2</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Mo 2:30PM - 3:20PM</date><room>Lederle Grad Res Tower 223</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>This course introduces and develops methods for designing and implementing abstract data types using the Java programming language. The main focus is on how to build and encapsulate data objects and their associated operations. Specific topics include linked structures, recursive structures and algorithms, binary trees, balanced trees, and hash tables. These topics are fundamental to programming and are essential to other courses in computer science. The course involves weekly programming assignments, in-class quizzes, discussion section exercises, and multiple exams.</description></item><item><name>COMPSCI  187 - 01LR   Programming w/Data Structures</name><class_number>55466</class_number><career>*University</career><grading> </grading><gened>R2</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Mo 12:20PM - 1:10PM</date><room>Lederle Grad Res Tower 223</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>This course introduces and develops methods for designing and implementing abstract data types using the Java programming language. The main focus is on how to build and encapsulate data objects and their associated operations. Specific topics include linked structures, recursive structures and algorithms, binary trees, balanced trees, and hash tables. These topics are fundamental to programming and are essential to other courses in computer science. The course involves weekly programming assignments, in-class quizzes, discussion section exercises, and multiple exams.</description></item><item><name>COMPSCI  187 - 01LS   Programming w/Data Structures</name><class_number>55470</class_number><career>*University</career><grading> </grading><gened>R2</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Mo 9:05AM - 9:55AM</date><room>Lederle Grad Res Tower 223</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>This course introduces and develops methods for designing and implementing abstract data types using the Java programming language. The main focus is on how to build and encapsulate data objects and their associated operations. Specific topics include linked structures, recursive structures and algorithms, binary trees, balanced trees, and hash tables. These topics are fundamental to programming and are essential to other courses in computer science. The course involves weekly programming assignments, in-class quizzes, discussion section exercises, and multiple exams.</description></item><item><name>COMPSCI  187 - 01LU   Programming w/Data Structures</name><class_number>55471</class_number><career>*University</career><grading> </grading><gened>R2</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Mo 9:05AM - 9:55AM</date><room>Lederle Grad Tower Room 225</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>This course introduces and develops methods for designing and implementing abstract data types using the Java programming language. The main focus is on how to build and encapsulate data objects and their associated operations. Specific topics include linked structures, recursive structures and algorithms, binary trees, balanced trees, and hash tables. These topics are fundamental to programming and are essential to other courses in computer science. The course involves weekly programming assignments, in-class quizzes, discussion section exercises, and multiple exams.</description></item><item><name>COMPSCI  187 - 01LV   Programming w/Data Structures</name><class_number>60965</class_number><career>*University</career><grading> </grading><gened>R2</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Mo 10:10AM - 11:00AM</date><room>Lederle Grad Tower Room 225</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>This course introduces and develops methods for designing and implementing abstract data types using the Java programming language. The main focus is on how to build and encapsulate data objects and their associated operations. Specific topics include linked structures, recursive structures and algorithms, binary trees, balanced trees, and hash tables. These topics are fundamental to programming and are essential to other courses in computer science. The course involves weekly programming assignments, in-class quizzes, discussion section exercises, and multiple exams.</description></item><item><name>COMPSCI  187 - 01LW   Programming w/Data Structures</name><class_number>60966</class_number><career>*University</career><grading> </grading><gened>R2</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Mo 11:15AM - 12:05PM</date><room>Lederle Grad Tower Room 225</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>This course introduces and develops methods for designing and implementing abstract data types using the Java programming language. The main focus is on how to build and encapsulate data objects and their associated operations. Specific topics include linked structures, recursive structures and algorithms, binary trees, balanced trees, and hash tables. These topics are fundamental to programming and are essential to other courses in computer science. The course involves weekly programming assignments, in-class quizzes, discussion section exercises, and multiple exams.</description></item><item><name>COMPSCI  187 - 01LX   Programming w/Data Structures</name><class_number>60967</class_number><career>*University</career><grading> </grading><gened>R2</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Mo 1:25PM - 2:15PM</date><room>Lederle Grad Tower Room 225</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>This course introduces and develops methods for designing and implementing abstract data types using the Java programming language. The main focus is on how to build and encapsulate data objects and their associated operations. Specific topics include linked structures, recursive structures and algorithms, binary trees, balanced trees, and hash tables. These topics are fundamental to programming and are essential to other courses in computer science. The course involves weekly programming assignments, in-class quizzes, discussion section exercises, and multiple exams.</description></item><item><name>COMPSCI  187 - 01LZ   Programming w/Data Structures</name><class_number>60968</class_number><career>*University</career><grading> </grading><gened>R2</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Mo 2:30PM - 3:20PM</date><room>Lederle Grad Tower Room 225</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>This course introduces and develops methods for designing and implementing abstract data types using the Java programming language. The main focus is on how to build and encapsulate data objects and their associated operations. Specific topics include linked structures, recursive structures and algorithms, binary trees, balanced trees, and hash tables. These topics are fundamental to programming and are essential to other courses in computer science. The course involves weekly programming assignments, in-class quizzes, discussion section exercises, and multiple exams.</description></item><item><name>COMPSCI  187 - 01ML   Programming w/Data Structures</name><class_number>60969</class_number><career>*University</career><grading> </grading><gened>R2</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Mo 12:20PM - 1:10PM</date><room>Lederle Grad Tower Room 225</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>This course introduces and develops methods for designing and implementing abstract data types using the Java programming language. The main focus is on how to build and encapsulate data objects and their associated operations. Specific topics include linked structures, recursive structures and algorithms, binary trees, balanced trees, and hash tables. These topics are fundamental to programming and are essential to other courses in computer science. The course involves weekly programming assignments, in-class quizzes, discussion section exercises, and multiple exams.</description></item><item><name>COMPSCI  196 - 01   Independent Study</name><class_number>55411</class_number><units>1 - 6</units><career>*University</career><grading>Letter-Grading for Undergraduate Students</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TBA</date><room>TBA</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>Not available at this time</description></item><item><name>COMPSCI  196ISH - 01   Hnrs Indstu COMPSCI</name><class_number>55435</class_number><units>3 - 6</units><career>*University</career><grading>Letter-Grading for Undergraduate Students</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TBA</date><room>TBA</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>Not available at this time</description></item><item><name>COMPSCI  197C - 01   ST-Programming in C</name><class_number>55440</class_number><units>1</units><career>*University</career><grading>Mandatory Pass/Fail Grading</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Tu 2:30PM - 3:45PM</date><room>Lederle Grad Tower Room 225</room><instructor>John Foley</instructor><meet_dates>01/30/2018 - 03/06/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>A brief introduction to the C programming language for students with a good working knowledge of Java and data structures. This course is good preparation for COMPSCI 230 and courses that use C and C++.  This course is for Computer Science minors and majors only, but it does not count towards either degree.</description></item><item><name>COMPSCI  197S - 01   ST-Basics of Cybersecurity</name><class_number>62242</class_number><units>1</units><career>*University</career><grading>Mandatory Pass/Fail Grading</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>MoWe 4:00PM - 5:15PM</date><room>Hasbrouck Lab Add room 113</room><instructor>Shruti Jadon</instructor><meet_dates>03/19/2018 - 04/25/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>This short course provides an introduction to basic principles and practices of computer and network security. Topics include ethics, primary definitions, applied cryptography, networking, operating systems, malware, and incident handling. The course is flipped: students complete readings and assignments ahead of each class, and class time is used to discuss this work. Class discussion includes current events related to security as well. Attendance is mandatory.</description></item><item><name>COMPSCI  197U - 01   ST-A Hands-On Intro to UNIX</name><class_number>55447</class_number><units>1</units><career>*University</career><grading>Mandatory Pass/Fail Grading</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>MoWe 4:00PM - 5:15PM</date><room>Integ. Learning Center S231</room><instructor>John Foley</instructor><meet_dates>01/29/2018 - 03/07/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>This course offers an introduction to working with Unix, and it is intended to help students work with tools commonly used in CS courses. The class is comprised of both discussion and hands-on exercises in the EdLab. Topics covered include working with the command line, installing and maintaining the OS and software packages, version control systems, compiling programs, and more. No previous experience with Unix is required.  This course is for CS minors and majors only, but it does not count towards either degree.</description></item><item><name>COMPSCI  198J - 01   P- High School Teaching Pract</name><class_number>62856</class_number><units>1</units><career>*University</career><grading>Letter-Grading for Undergraduate Students</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Th 4:00PM - 4:50PM</date><room>Lederle Grad Res Ctr rm A310</room><instructor>Emery Berger</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Instructor Consent Required</add_consent><description>Assisting high school students in learning computer programming in the context of a high school course. The language of instruction will be Java or Python. Students taking this independent study will be expected to work under the direct supervision of the high school computer science teacher at a local high school. In some terms students are expected to attend high school classes weekly for approximately one hour. In others they will work on developing projects for future courses, meeting with the high school instructor once a week.  Course evaluation will be performed by the high school teacher in cooperation with the supervising faculty member, and a final written report will be required.</description></item><item><name>COMPSCI  220 - 01   Programming Methodology</name><class_number>55441</class_number><units>4</units><career>*University</career><grading>Letter Grading with option of Pass/Fail Grading</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TuTh 4:00PM - 5:15PM</date><room>Goessmann Lab. Add rm 64</room><instructor>Arjun Guha</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>Development of individual skills necessary for designing, implementing, testing and modifying larger programs: use of various modern automated tools, design strategies and patterns, working with large code bases and libraries, code refactoring.</description></item><item><name>COMPSCI  220 - 01LL   Programming Methodology</name><class_number>55460</class_number><career>*University</career><grading> </grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>We 11:15AM - 12:05PM</date><room>Marston Hall room 220</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>Development of individual skills necessary for designing, implementing, testing and modifying larger programs: use of various modern automated tools, design strategies and patterns, working with large code bases and libraries, code refactoring.</description></item><item><name>COMPSCI  220 - 01LM   Programming Methodology</name><class_number>55461</class_number><career>*University</career><grading> </grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>We 10:10AM - 11:00AM</date><room>Marston Hall room 220</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>Development of individual skills necessary for designing, implementing, testing and modifying larger programs: use of various modern automated tools, design strategies and patterns, working with large code bases and libraries, code refactoring.</description></item><item><name>COMPSCI  220 - 01LN   Programming Methodology</name><class_number>55483</class_number><career>*University</career><grading> </grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>We 12:20PM - 1:10PM</date><room>Engineering Laboratory rm 304</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>Development of individual skills necessary for designing, implementing, testing and modifying larger programs: use of various modern automated tools, design strategies and patterns, working with large code bases and libraries, code refactoring.</description></item><item><name>COMPSCI  220 - 01LQ   Programming Methodology</name><class_number>55487</class_number><career>*University</career><grading> </grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>We 1:25PM - 2:15PM</date><room>Tobin Hall room 304</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>Development of individual skills necessary for designing, implementing, testing and modifying larger programs: use of various modern automated tools, design strategies and patterns, working with large code bases and libraries, code refactoring.</description></item><item><name>COMPSCI  230 - 01   Computer Systems Principles</name><class_number>55446</class_number><units>4</units><career>*University</career><grading>Letter Grading with option of Pass/Fail Grading</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TuTh 1:00PM - 2:15PM</date><room>Morrill Sci Ctr (1)  Room N375</room><instructor>Timothy Richards</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>Large-scale software systems like Google - deployed over a world-wide network of hundreds of thousands of computers - have become a part of our lives. These are systems success stories - they are reliable, available ("up" nearly all the time), handle an unbelievable amount of load from users around the world, yet provide virtually instantaneous results. On the other hand, many computer systems don't perform nearly as well as Google - hence the now-cliche "the system is down." In this class, we study the scientific principles behind the construction of high-performance, scalable systems. The course begins with a discussion of the relevant features of modern architectures, and moves up the stack from there to operating system services such as programming language runtime systems, concurrency and synchronization, with a focus on key operating system features, I/O and networking, and distributed services.</description></item><item><name>COMPSCI  230 - 01LL   Computer Systems Principles</name><class_number>55464</class_number><career>*University</career><grading> </grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Fr 11:15AM - 12:05PM</date><room>Hasbrouck Lab Add room 111</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>Large-scale software systems like Google - deployed over a world-wide network of hundreds of thousands of computers - have become a part of our lives. These are systems success stories - they are reliable, available ("up" nearly all the time), handle an unbelievable amount of load from users around the world, yet provide virtually instantaneous results. On the other hand, many computer systems don't perform nearly as well as Google - hence the now-cliche "the system is down." In this class, we study the scientific principles behind the construction of high-performance, scalable systems. The course begins with a discussion of the relevant features of modern architectures, and moves up the stack from there to operating system services such as programming language runtime systems, concurrency and synchronization, with a focus on key operating system features, I/O and networking, and distributed services.</description></item><item><name>COMPSCI  230 - 01LM   Computer Systems Principles</name><class_number>55469</class_number><career>*University</career><grading> </grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Fr 1:25PM - 2:15PM</date><room>Engineering Laboratory rm 325</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>Large-scale software systems like Google - deployed over a world-wide network of hundreds of thousands of computers - have become a part of our lives. These are systems success stories - they are reliable, available ("up" nearly all the time), handle an unbelievable amount of load from users around the world, yet provide virtually instantaneous results. On the other hand, many computer systems don't perform nearly as well as Google - hence the now-cliche "the system is down." In this class, we study the scientific principles behind the construction of high-performance, scalable systems. The course begins with a discussion of the relevant features of modern architectures, and moves up the stack from there to operating system services such as programming language runtime systems, concurrency and synchronization, with a focus on key operating system features, I/O and networking, and distributed services.</description></item><item><name>COMPSCI  230 - 01LN   Computer Systems Principles</name><class_number>55488</class_number><career>*University</career><grading> </grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Fr 12:20PM - 1:10PM</date><room>Engineering Laboratory rm 306</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>Large-scale software systems like Google - deployed over a world-wide network of hundreds of thousands of computers - have become a part of our lives. These are systems success stories - they are reliable, available ("up" nearly all the time), handle an unbelievable amount of load from users around the world, yet provide virtually instantaneous results. On the other hand, many computer systems don't perform nearly as well as Google - hence the now-cliche "the system is down." In this class, we study the scientific principles behind the construction of high-performance, scalable systems. The course begins with a discussion of the relevant features of modern architectures, and moves up the stack from there to operating system services such as programming language runtime systems, concurrency and synchronization, with a focus on key operating system features, I/O and networking, and distributed services.</description></item><item><name>COMPSCI  230 - 01LQ   Computer Systems Principles</name><class_number>55512</class_number><career>*University</career><grading> </grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Fr 11:15AM - 12:05PM</date><room>Engineering Laboratory rm 306</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>Large-scale software systems like Google - deployed over a world-wide network of hundreds of thousands of computers - have become a part of our lives. These are systems success stories - they are reliable, available ("up" nearly all the time), handle an unbelievable amount of load from users around the world, yet provide virtually instantaneous results. On the other hand, many computer systems don't perform nearly as well as Google - hence the now-cliche "the system is down." In this class, we study the scientific principles behind the construction of high-performance, scalable systems. The course begins with a discussion of the relevant features of modern architectures, and moves up the stack from there to operating system services such as programming language runtime systems, concurrency and synchronization, with a focus on key operating system features, I/O and networking, and distributed services.</description></item><item><name>COMPSCI  230 - 01LR   Computer Systems Principles</name><class_number>55513</class_number><career>*University</career><grading> </grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Fr 1:25PM - 2:15PM</date><room>Marston Hall room 211</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>Large-scale software systems like Google - deployed over a world-wide network of hundreds of thousands of computers - have become a part of our lives. These are systems success stories - they are reliable, available ("up" nearly all the time), handle an unbelievable amount of load from users around the world, yet provide virtually instantaneous results. On the other hand, many computer systems don't perform nearly as well as Google - hence the now-cliche "the system is down." In this class, we study the scientific principles behind the construction of high-performance, scalable systems. The course begins with a discussion of the relevant features of modern architectures, and moves up the stack from there to operating system services such as programming language runtime systems, concurrency and synchronization, with a focus on key operating system features, I/O and networking, and distributed services.</description></item><item><name>COMPSCI  230 - 01LS   Computer Systems Principles</name><class_number>55514</class_number><career>*University</career><grading> </grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Fr 12:20PM - 1:10PM</date><room>Ag. Engineering Bldg rm 119</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>Large-scale software systems like Google - deployed over a world-wide network of hundreds of thousands of computers - have become a part of our lives. These are systems success stories - they are reliable, available ("up" nearly all the time), handle an unbelievable amount of load from users around the world, yet provide virtually instantaneous results. On the other hand, many computer systems don't perform nearly as well as Google - hence the now-cliche "the system is down." In this class, we study the scientific principles behind the construction of high-performance, scalable systems. The course begins with a discussion of the relevant features of modern architectures, and moves up the stack from there to operating system services such as programming language runtime systems, concurrency and synchronization, with a focus on key operating system features, I/O and networking, and distributed services.</description></item><item><name>COMPSCI  240 - 01   Reasoning Under Uncertainty</name><class_number>55442</class_number><units>4</units><career>*University</career><grading>Letter Grading with option of Pass/Fail Grading</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TuTh 11:30AM - 12:45PM</date><room>Thompson Hall room 102</room><instructor>Emma Tosch, Luis Pineda</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>Development of mathematical reasoning skills for problems that involve uncertainty. Counting and probability, probabilistic reasoning, Naive Bayes classifiers, Monte Carlo simulation, Markov chains, Markov decision processes, classical game theory, and introduction to information theory.</description></item><item><name>COMPSCI  240 - 01AA   Reasoning Under Uncertainty</name><class_number>55462</class_number><career>*University</career><grading> </grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>We 12:20PM - 1:10PM</date><room>Engineering Laboratory rm 306</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>Development of mathematical reasoning skills for problems that involve uncertainty. Counting and probability, probabilistic reasoning, Naive Bayes classifiers, Monte Carlo simulation, Markov chains, Markov decision processes, classical game theory, and introduction to information theory.</description></item><item><name>COMPSCI  240 - 01AB   Reasoning Under Uncertainty</name><class_number>55467</class_number><career>*University</career><grading> </grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>We 10:10AM - 11:00AM</date><room>Engineering Laboratory rm 323</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>Development of mathematical reasoning skills for problems that involve uncertainty. Counting and probability, probabilistic reasoning, Naive Bayes classifiers, Monte Carlo simulation, Markov chains, Markov decision processes, classical game theory, and introduction to information theory.</description></item><item><name>COMPSCI  240 - 01AC   Reasoning Under Uncertainty</name><class_number>55477</class_number><career>*University</career><grading> </grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>We 9:05AM - 9:55AM</date><room>Marston Hall room 211</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>Development of mathematical reasoning skills for problems that involve uncertainty. Counting and probability, probabilistic reasoning, Naive Bayes classifiers, Monte Carlo simulation, Markov chains, Markov decision processes, classical game theory, and introduction to information theory.</description></item><item><name>COMPSCI  240 - 01AD   Reasoning Under Uncertainty</name><class_number>55489</class_number><career>*University</career><grading> </grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>We 1:25PM - 2:15PM</date><room>Marston Hall room 211</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>Development of mathematical reasoning skills for problems that involve uncertainty. Counting and probability, probabilistic reasoning, Naive Bayes classifiers, Monte Carlo simulation, Markov chains, Markov decision processes, classical game theory, and introduction to information theory.</description></item><item><name>COMPSCI  250 - 01   Introduction To Computation</name><class_number>55412</class_number><units>4</units><career>*University</career><grading>Letter Grading with option of Pass/Fail Grading</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>MoWeFr 1:25PM - 2:15PM</date><room>Bartlett Hall room 65</room><instructor>David Barrington</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>Lecture, discussion.  Basic concepts of discrete mathematics useful to computer science:  set theory, strings and formal languages, propositional and predicate calculus, relations and functions, basic number theory.  Induction and recursion:  interplay of inductive definition, inductive proof, and recursive algorithms.  Graphs, trees, and search.   Finite-state machines, regular languages, nondeterministic finite automata, Kleene's Theorem.  Problem sets, 2-3 midterm exams, timed final.</description></item><item><name>COMPSCI  250 - 01AA   Introduction To Computation</name><class_number>55413</class_number><career>*University</career><grading> </grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Fr 10:10AM - 11:00AM</date><room>Engineering Laboratory rm 323</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>Lecture, discussion.  Basic concepts of discrete mathematics useful to computer science:  set theory, strings and formal languages, propositional and predicate calculus, relations and functions, basic number theory.  Induction and recursion:  interplay of inductive definition, inductive proof, and recursive algorithms.  Graphs, trees, and search.   Finite-state machines, regular languages, nondeterministic finite automata, Kleene's Theorem.  Problem sets, 2-3 midterm exams, timed final.</description></item><item><name>COMPSCI  250 - 01AB   Introduction To Computation</name><class_number>55450</class_number><career>*University</career><grading> </grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Fr 9:05AM - 9:55AM</date><room>Engineering Laboratory rm 323</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>Lecture, discussion.  Basic concepts of discrete mathematics useful to computer science:  set theory, strings and formal languages, propositional and predicate calculus, relations and functions, basic number theory.  Induction and recursion:  interplay of inductive definition, inductive proof, and recursive algorithms.  Graphs, trees, and search.   Finite-state machines, regular languages, nondeterministic finite automata, Kleene's Theorem.  Problem sets, 2-3 midterm exams, timed final.</description></item><item><name>COMPSCI  250 - 01AC   Introduction To Computation</name><class_number>55474</class_number><career>*University</career><grading> </grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Fr 10:10AM - 11:00AM</date><room>Flint Laboratory room 105</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>Lecture, discussion.  Basic concepts of discrete mathematics useful to computer science:  set theory, strings and formal languages, propositional and predicate calculus, relations and functions, basic number theory.  Induction and recursion:  interplay of inductive definition, inductive proof, and recursive algorithms.  Graphs, trees, and search.   Finite-state machines, regular languages, nondeterministic finite automata, Kleene's Theorem.  Problem sets, 2-3 midterm exams, timed final.</description></item><item><name>COMPSCI  250 - 01AD   Introduction To Computation</name><class_number>55475</class_number><career>*University</career><grading> </grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Fr 9:05AM - 9:55AM</date><room>Flint Laboratory room 105</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>Lecture, discussion.  Basic concepts of discrete mathematics useful to computer science:  set theory, strings and formal languages, propositional and predicate calculus, relations and functions, basic number theory.  Induction and recursion:  interplay of inductive definition, inductive proof, and recursive algorithms.  Graphs, trees, and search.   Finite-state machines, regular languages, nondeterministic finite automata, Kleene's Theorem.  Problem sets, 2-3 midterm exams, timed final.</description></item><item><name>COMPSCI  250 - 01AE   Introduction To Computation</name><class_number>62634</class_number><career>*University</career><grading> </grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Fr 12:20PM - 1:10PM</date><room>Engineering Laboratory rm 304</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>Lecture, discussion.  Basic concepts of discrete mathematics useful to computer science:  set theory, strings and formal languages, propositional and predicate calculus, relations and functions, basic number theory.  Induction and recursion:  interplay of inductive definition, inductive proof, and recursive algorithms.  Graphs, trees, and search.   Finite-state machines, regular languages, nondeterministic finite automata, Kleene's Theorem.  Problem sets, 2-3 midterm exams, timed final.</description></item><item><name>COMPSCI  296 - 01   Independent Study</name><class_number>55414</class_number><units>1 - 6</units><career>*University</career><grading>Letter-Grading for Undergraduate Students</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TBA</date><room>TBA</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>Not available at this time</description></item><item><name>COMPSCI  296ISH - 01   Hnr Indstu In COMPSCI</name><class_number>55436</class_number><units>3 - 6</units><career>*University</career><grading>Letter-Grading for Undergraduate Students</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TBA</date><room>TBA</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>Not available at this time</description></item><item><name>COMPSCI  305 - 01   Social Issues in Computing</name><class_number>55415</class_number><units>3</units><career>*University</career><grading>Letter Grading with option of Pass/Fail Grading</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TuTh 10:00AM - 11:15AM</date><room>Hasbrouck Lab Add room 109</room><instructor>Michelle Trim</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>Satisfies the Junior Year Writing requirement. The impact of computers on modern society.</description></item><item><name>COMPSCI  305 - 02   Social Issues in Computing</name><class_number>55478</class_number><units>3</units><career>*University</career><grading>Letter Grading with option of Pass/Fail Grading</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TuTh 11:30AM - 12:45PM</date><room>Hasbrouck Lab Add room 109</room><instructor>Michelle Trim</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>Satisfies the Junior Year Writing requirement. The impact of computers on modern society.</description></item><item><name>COMPSCI  305 - 03   Social Issues in Computing</name><class_number>55490</class_number><units>3</units><career>*University</career><grading>Letter Grading with option of Pass/Fail Grading</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>MoWe 2:30PM - 3:45PM</date><room>Lederle Grad Res Ctr rm A310</room><instructor>Anna Rita Napoleone</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>Satisfies the Junior Year Writing requirement. The impact of computers on modern society.</description></item><item><name>COMPSCI  305 - 04   Social Issues in Computing</name><class_number>55515</class_number><units>3</units><career>*University</career><grading>Letter Grading with option of Pass/Fail Grading</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>MoWe 4:00PM - 5:15PM</date><room>Lederle Grad Res Ctr rm A310</room><instructor>Anna Rita Napoleone</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>Satisfies the Junior Year Writing requirement. The impact of computers on modern society.</description></item><item><name>COMPSCI  311 - 01   Introduction to Algorithms</name><class_number>55416</class_number><units>4</units><career>*University</career><grading>Letter Grading with option of Pass/Fail Grading</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>MoWe 4:00PM - 5:15PM</date><room>Goessmann Lab. Add rm 64</room><instructor>Akshay Krishnamurthy</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>The design and analysis of efficient algorithms for important computational problems. Emphasis on the relationships between algorithms and data structures and on measures of algorithmic efficiency. Sorting (heapsort, mergesort, quicksort), searching, graph algorithms. Experimental analysis of algorithms also emphasized. Use of computer required.</description></item><item><name>COMPSCI  311 - 01AA   Introduction to Algorithms</name><class_number>55417</class_number><career>*University</career><grading> </grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Fr 10:10AM - 11:00AM</date><room>Flint Lab room 201</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>The design and analysis of efficient algorithms for important computational problems. Emphasis on the relationships between algorithms and data structures and on measures of algorithmic efficiency. Sorting (heapsort, mergesort, quicksort), searching, graph algorithms. Experimental analysis of algorithms also emphasized. Use of computer required.</description></item><item><name>COMPSCI  311 - 01AB   Introduction to Algorithms</name><class_number>55549</class_number><career>*University</career><grading> </grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Fr 1:25PM - 2:15PM</date><room>Flint Laboratory room 105</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>The design and analysis of efficient algorithms for important computational problems. Emphasis on the relationships between algorithms and data structures and on measures of algorithmic efficiency. Sorting (heapsort, mergesort, quicksort), searching, graph algorithms. Experimental analysis of algorithms also emphasized. Use of computer required.</description></item><item><name>COMPSCI  311 - 01AC   Introduction to Algorithms</name><class_number>61795</class_number><career>*University</career><grading> </grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Fr 12:20PM - 1:10PM</date><room>Flint Laboratory room 105</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>The design and analysis of efficient algorithms for important computational problems. Emphasis on the relationships between algorithms and data structures and on measures of algorithmic efficiency. Sorting (heapsort, mergesort, quicksort), searching, graph algorithms. Experimental analysis of algorithms also emphasized. Use of computer required.</description></item><item><name>COMPSCI  320 - 01   Software Engineering</name><class_number>55418</class_number><units>4</units><career>*University</career><grading>Letter Grading with option of Pass/Fail Grading</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>MoWe 2:30PM - 3:45PM</date><room>Goessmann Lab Addtn rm 151</room><instructor>Gordon Anderson</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>In this course, students learn and gain practical experience with software engineering principles and techniques. The practical experience centers on a semester-long team project in which a software development project is carried through all the stages of the software life cycle. Topics in this course include requirements analysis, specification, design, abstraction, programming style, testing, maintenance, communication, teamwork, and software project management. Particular emphasis is placed on communication and negotiation skills and on designing and developing maintainable software.  Use of computer required. Several written assignments, in-class presentations, and a term project. This course satisfies the Integrative Experience requirement for BS and BA CS majors.</description></item><item><name>COMPSCI  320 - 01AA   Software Engineering</name><class_number>55439</class_number><career>*University</career><grading> </grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>We 1:25PM - 2:15PM</date><room>Engineering Laboratory rm 323</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>In this course, students learn and gain practical experience with software engineering principles and techniques. The practical experience centers on a semester-long team project in which a software development project is carried through all the stages of the software life cycle. Topics in this course include requirements analysis, specification, design, abstraction, programming style, testing, maintenance, communication, teamwork, and software project management. Particular emphasis is placed on communication and negotiation skills and on designing and developing maintainable software.  Use of computer required. Several written assignments, in-class presentations, and a term project. This course satisfies the Integrative Experience requirement for BS and BA CS majors.</description></item><item><name>COMPSCI  320 - 02   Software Engineering</name><class_number>55501</class_number><units>4</units><career>*University</career><grading>Letter Grading with option of Pass/Fail Grading</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>MoWe 2:30PM - 3:45PM</date><room>Goessmann lab Addition 152</room><instructor>Neena Thota</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>In this course, students learn and gain practical experience with software engineering principles and techniques. The practical experience centers on a semester-long team project in which a software development project is carried through all the stages of the software life cycle. Topics in this course include requirements analysis, specification, design, abstraction, programming style, testing, maintenance, communication, teamwork, and software project management. Particular emphasis is placed on communication and negotiation skills and on designing and developing maintainable software.  Use of computer required. Several written assignments, in-class presentations, and a term project. This course satisfies the Integrative Experience requirement for BS and BA CS majors.</description></item><item><name>COMPSCI  320 - 02AA   Software Engineering</name><class_number>55502</class_number><career>*University</career><grading> </grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>We 12:20PM - 1:10PM</date><room>Tobin Hall room 204</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>In this course, students learn and gain practical experience with software engineering principles and techniques. The practical experience centers on a semester-long team project in which a software development project is carried through all the stages of the software life cycle. Topics in this course include requirements analysis, specification, design, abstraction, programming style, testing, maintenance, communication, teamwork, and software project management. Particular emphasis is placed on communication and negotiation skills and on designing and developing maintainable software.  Use of computer required. Several written assignments, in-class presentations, and a term project. This course satisfies the Integrative Experience requirement for BS and BA CS majors.</description></item><item><name>COMPSCI  326 - 01   Web Programming</name><class_number>55468</class_number><units>3</units><career>*University</career><grading>Letter Grading with option of Pass/Fail Grading</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TuTh 4:00PM - 5:15PM</date><room>South College Room W245</room><instructor>Timothy Richards</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>The World Wide Web was proposed originally as a collection of static documents inter-connected by hyperlinks. Today, the web has grown into a rich platform, built on a variety of protocols, standards, and programming languages, that aims to replace many of the services traditionally provided by a desktop operating system.  This course will study core technologies, concepts, and techniques behind the creation of modern web-based systems and applications.  This course satisfies the Integrative Experience requirement for BS/BA CS majors.</description></item><item><name>COMPSCI  345 - 01   Pract &amp;amp; Appl of Data Managemnt</name><class_number>62041</class_number><units>3</units><career>*University</career><grading>Letter Grading with option of Pass/Fail Grading</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Mo 10:10AM - 12:05PM</date><room>Integ. Learning Center S220</room><instructor>David Wemhoener</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>Computing has become data-driven, and databases are now at the heart of commercial applications. The purpose of this course is to provide a comprehensive introduction to the use of data management systems within the context of various applications. Some of the covered topics include application-driven database design, schema refinement, implementation of basic transactions, data on the web, and data visualization.</description></item><item><name>COMPSCI  365 - 01   Digital Forensics</name><class_number>55540</class_number><units>3</units><career>*University</career><grading>Letter Grading with option of Pass/Fail Grading</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TuTh 10:00AM - 11:15AM</date><room>Hasbrouck Lab Add room 124</room><instructor>Marc Liberatore</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>This course offers a broad introduction to the forensic investigation of digital devices.  We cover the preservation, recovery, harvesting, and courtroom presentation of information from file systems, operating systems, networks, database systems applications, media files, and embedded systems.  The primary goal of the class is to understand why and from where information is recoverable in these systems.  We also cover relevant issues from criminology, law, and the study of privacy.</description></item><item><name>COMPSCI  370 - 01   Intro to Computer Vision</name><class_number>55508</class_number><units>3</units><career>*University</career><grading>Letter Grading with option of Pass/Fail Grading</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TuTh 11:30AM - 12:45PM</date><room>Engineering Laboratory rm 304</room><instructor>Subhransu Maji</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>This introductory computer vision class will address fundamental questions about getting computers to "see" like humans.  We investigate questions such as -What is the role of vision in intelligence? -How are images represented in a computer? -How can we write algorithms to recognize an object? -How can humans and computers "learn to see better" from experience?  We will write a number of basic computer programs to do things like recognize handwritten characters, track objects in video, and understand the structure of images.</description></item><item><name>COMPSCI  373 - 01   Intro to Computer Graphics</name><class_number>55482</class_number><units>3</units><career>*University</career><grading>Letter-Grading for Undergraduate Students</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TuTh 2:30PM - 3:45PM</date><room>Morrill Sci. Ctr. (III) rm 203</room><instructor>Evangelos Kalogerakis</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>This course introduces the fundamental concepts of two-dimensional (2D) and three-dimensional (3D) computer graphics. It covers the basic methods needed to model, render, and animate 3D objects. Topics include raster displays, line drawing, affine and perspective transformations, windows and viewpoints, clipping, visibility, illumination models, reflectance models, radiometry, curves and surfaces, shading, texture mapping, ray tracing, graphic toolkits, animation, and 3D printing. Throughout the class, students will learn algorhithmic ways to model the visual world, and write Java programs to implement various computer graphics algorithms.</description></item><item><name>COMPSCI  377 - 01   Operating Systems</name><class_number>55419</class_number><units>4</units><career>*University</career><grading>Letter Grading with option of Pass/Fail Grading</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TuTh 1:00PM - 2:15PM</date><room>Hasbrouck Laboratory room 134</room><instructor>Ahmed Aleyeldin Hassan</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>The design and operation of modern computer operating systems. Review of capabilities of typical computer hardware. Topics include command language interpreter (the shell), processes, concurrency, inter-process communication, linking and loading, memory management, transactions, file systems, distributed systems, security, and protection. Programming projects in Java and C.</description></item><item><name>COMPSCI  377 - 01AA   Operating Systems</name><class_number>55420</class_number><career>*University</career><grading> </grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Mo 11:15AM - 12:05PM</date><room>Hasbrouck Laboratory room 134</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>The design and operation of modern computer operating systems. Review of capabilities of typical computer hardware. Topics include command language interpreter (the shell), processes, concurrency, inter-process communication, linking and loading, memory management, transactions, file systems, distributed systems, security, and protection. Programming projects in Java and C.</description></item><item><name>COMPSCI  383 - 01   Artificial Intelligence</name><class_number>55421</class_number><units>3</units><career>*University</career><grading>Letter Grading with option of Pass/Fail Grading</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>MoWe 8:00AM - 8:50AM</date><room>Hasbrouck Laboratory room 134</room><instructor>Philip Thomas</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>The Course explores key concepts of artificial intelligence, including state-space and heuristic search techniques, game playing, knowledge representation, automated planning, reasoning under uncertainty, decision theory and machine learning. We will examine how these concepts are applied in the context of several applications.</description></item><item><name>COMPSCI  390N - 01   Internet of Things</name><class_number>55555</class_number><units>3</units><career>*University</career><grading>Letter Grading with option of Pass/Fail Grading</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TuTh 4:00PM - 5:15PM</date><room>Computer Science Bldg rm 142</room><instructor>Sunghoon Lee</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>We are living in a world where everyday objects, such as smartphones, cars, TVs, and even refrigerators, are becoming smarter and constantly connected to each other to build, operate, and manage the physical world. This emerging paradigm, namely the Internet of Things (IoT), has great potential to impact how individuals live and work by providing a source of innovative decision making.  The design of the IoT, which is defined as "a internetwork of physical items -- each embedded with sensors -- that are connected to the Internet", requires the understanding of embedded electronics, software, sensors, network, and data analytics.  To prepare our students as forerunners of this future, this course will introduce a wide range of topics in the broad areas of IoT, and provide hands-on experiences via a series of exciting projects.  This course counts as a CS Elective for the CS Major (BS/BA).</description></item><item><name>COMPSCI  396 - 01   Independent Study</name><class_number>55422</class_number><units>1 - 6</units><career>*University</career><grading>Letter-Grading for Undergraduate Students</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TBA</date><room>TBA</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>Not available at this time</description></item><item><name>COMPSCI  396ISH - 01   Hnrs Indstu Cmpsci</name><class_number>55437</class_number><units>3 - 6</units><career>*University</career><grading>Letter-Grading for Undergraduate Students</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TBA</date><room>TBA</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>Not available at this time</description></item><item><name>COMPSCI  403 - 01   IntroRobotcs:PercpMechDynCntrl</name><class_number>61195</class_number><units>3</units><career>*University</career><grading>Letter Grading with option of Pass/Fail Grading</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TuTh 10:00AM - 11:15AM</date><room>Goessmann Lab. Addtn room 51</room><instructor>Joydeep Biswas</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>This course covers basic methods and concepts in order to explain how robots work. We will study how they sense things in the world, how you make a robot move, and how robots can make their own decisions. We will study mechanisms (kinematics and dynamics), actuators, sensors, (with a focus on machine vision), signal processing, feedback control theory, machine learning, and path planning. Students will build software systems for simulated robots and logged real robot sensor data, and do experiments with system identification and control, image processing, and path planning to reinforce the material presented in class.</description></item><item><name>COMPSCI  445 - 01   Information Systems</name><class_number>55480</class_number><units>3</units><career>*University</career><grading>Letter Grading with option of Pass/Fail Grading</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TuTh 11:30AM - 12:45PM</date><room>Hasbrouck Laboratory room 134</room><instructor>Gerome Miklau</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>Introduction to the efficient management of large-scale data. Principles for representing information in the relational model and semi-structured data models (XML, JSON); query languages for analyzing and manipulating data (SQL and others); core systems principles for data management (file organizations, query optimization, indexing, distributed data processing, concurrency control) and distributed data processing paradigms.</description></item><item><name>COMPSCI  446 - 01   Search Engines</name><class_number>55443</class_number><units>3</units><career>*University</career><grading>Letter Grading with option of Pass/Fail Grading</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TuTh 8:30AM - 9:45AM</date><room>Integ. Learning Center S211</room><instructor>David Fisher</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>This course provides an overview of the important issues in information retrieval, and how those issues affect the design and implementation of search engines.  The course emphasizes the technology used in Web search engines, and the information retrieval theories and concepts that underlie all search applications.  Mathematical experience (as provided by COMPSCI 240) is required.  You should also be able to program in Java (or some other closely related language).</description></item><item><name>COMPSCI  453 - 01   Computer Networks</name><class_number>55472</class_number><units>3</units><career>*University</career><grading>Letter Grading with option of Pass/Fail Grading</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TuTh 2:30PM - 3:45PM</date><room>Goessmann Laboratory room 20</room><instructor>Parviz Kermani</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>Introduction to computer communication networks and protocols. Fundamental concepts in the design and analysis of computer networks. Topics include: layered network architectures, applications, network, programming interfaces, transport, congestion, routing, data link protocols, local area networks, emerging high-speed networks, network management, and network security. Examples drawn from the Internet (e.g., TCP, UDP, and IP) protocol suite.</description></item><item><name>COMPSCI  490P - 01   Secure Distributed Systems</name><class_number>62579</class_number><units>3</units><career>*University</career><grading>Letter Grading with option of Pass/Fail Grading</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TBA</date><room>On-Line</room><instructor>Brian Levine</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>This is a class devoted to the study of securing distributed systems, with blockchain-based cryptocurrencies serving as our real platform of interest. We'll start with the fundamentals of Lamport's, Fischer's, and Douceur's results that fence-in all consensus system, and discuss Byzantine fault tolerance.  We'll also look at the efficiency of the network architectures for peer-to-peer/distributed system communication and attacks on their security, such as denial of service attacks. And we'll review relevant applied cryptography such as elliptical curves. We'll discuss in detail the mechanisms of Bitcoin and Ethereum and we'll program distributed applications for Ethereum. Other topics include economics and finance. The course is based on a flipped classroom. This course counts as a CS Elective toward the CS major (BA or BS), as well an any 2 menu choice for the Security &amp;amp; Privacy track.</description></item><item><name>COMPSCI  490P - 01AA   Secure Distributed Systems</name><class_number>62580</class_number><career>*University</career><grading> </grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Mo 2:30PM - 3:45PM</date><room>Lederle Grad Res Ctr rm A301</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>This is a class devoted to the study of securing distributed systems, with blockchain-based cryptocurrencies serving as our real platform of interest. We'll start with the fundamentals of Lamport's, Fischer's, and Douceur's results that fence-in all consensus system, and discuss Byzantine fault tolerance.  We'll also look at the efficiency of the network architectures for peer-to-peer/distributed system communication and attacks on their security, such as denial of service attacks. And we'll review relevant applied cryptography such as elliptical curves. We'll discuss in detail the mechanisms of Bitcoin and Ethereum and we'll program distributed applications for Ethereum. Other topics include economics and finance. The course is based on a flipped classroom. This course counts as a CS Elective toward the CS major (BA or BS), as well an any 2 menu choice for the Security &amp;amp; Privacy track.</description></item><item><name>COMPSCI  491G - 01   S-Computer Networking Lab</name><class_number>55449</class_number><units>3</units><career>*University</career><grading>Letter Grading with option of Pass/Fail Grading</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Fr 2:30PM - 3:45PM</date><room>Lederle Grad Tower 224</room><instructor>Parviz Kermani</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>In this course, students will learn how to put "principles into practice," in a hands-on-networking lab course. The course will cover router, switches and end-system labs in the areas of Single Segment IP Networks, Multiple Segment IP Networks and Static Routing, Dynamic Routing Protocols (RIP, OSPF and BGP), LAN switching, Transport Layer Protocols: UDP and TCP, NAT, DHCP, DNS, and SNMP. Students will also get engaged in evaluating power consumption of network components as an aid in the design of energy efficient (green) networks. This course counts as a CS Elective toward the CS major (BA/BS).</description></item><item><name>COMPSCI  496 - 01   Independent Study</name><class_number>55424</class_number><units>1 - 6</units><career>*University</career><grading>Letter-Grading for Undergraduate Students</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TBA</date><room>TBA</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>Not available at this time</description></item><item><name>COMPSCI  496ISH - 01   Hnr Indstu In COMPSCI</name><class_number>55438</class_number><units>3 - 6</units><career>*University</career><grading>Letter-Grading for Undergraduate Students</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TBA</date><room>TBA</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>Not available at this time</description></item><item><name>COMPSCI  497C - 01   ST-SpecTopics/ComputerGraphics</name><class_number>62073</class_number><units>3</units><career>*University</career><grading>Letter-Grading for Undergraduate Students</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TuTh 2:30PM - 3:45PM</date><room>Morrill Sci. Ctr. (III) rm 203</room><instructor>Evangelos Kalogerakis</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>This course introduces the fundamental concepts of two-dimensional (2D) and three-dimensional (3D) computer graphics. It covers the basic methods needed to model, render, and animate 3D objects. Topics include raster displays, line drawing, affine and perspective transformations, windows and viewpoints, clipping, visibility, illumination models, reflectance models, radiometry, curves and surfaces, shading, texture mapping, ray tracing, graphic toolkits, animation, and 3D printing. Throughout the class, students will learn algorithmic ways to model the visual world, and write Java programs to implement various computer graphics algorithms.  This course counts as a CS Elective toward the CS major (BA or BS).</description></item><item><name>COMPSCI  499P - 01   Honors Project</name><class_number>55425</class_number><units>3 - 6</units><career>*University</career><grading>Letter-Grading for Undergraduate Students</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TBA</date><room>TBA</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>Not available at this time</description></item><item><name>COMPSCI  499T - 01   Honors Thesis</name><class_number>55426</class_number><units>3 - 6</units><career>*University</career><grading>Letter-Grading for Undergraduate Students</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TBA</date><room>TBA</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>Not available at this time</description></item><item><name>COMPSCI  499Y - 01   Honors Research</name><class_number>55427</class_number><units>3 - 6</units><career>*University</career><grading>Year-Long Grading (for multi-term course)</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TBA</date><room>TBA</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>Not available at this time</description></item><item><name>COMPSCI  501 - 01   Formal Language Theory</name><class_number>55423</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>MoWeFr 11:15AM - 12:05PM</date><room>Lederle Grad Res Tower rm 123</room><instructor>Neil Immerman</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>Introduction to formal language theory. Topics include finite state languages, context-free languages, the relationship between language classes and formal machine models, the Turing Machine model of computation, theories of computability, resource-bounded models, and NP-completeness. It is recommended that students have a B- or better in COMPSCI 311 in order to attempt COMPSCI 501.</description></item><item><name>COMPSCI  501 - 02   Formal Language Theory</name><class_number>55481</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>MoWeFr 11:15AM - 12:05PM</date><room>Lederle Grad Res Tower rm 123</room><instructor>Neil Immerman</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>Introduction to formal language theory. Topics include finite state languages, context-free languages, the relationship between language classes and formal machine models, the Turing Machine model of computation, theories of computability, resource-bounded models, and NP-completeness. It is recommended that students have a B- or better in COMPSCI 311 in order to attempt COMPSCI 501.</description></item><item><name>COMPSCI  514 - 01   Algorithms for Data Science</name><class_number>61140</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TuTh 11:30AM - 12:45PM</date><room>Lederle Grad Res Tower rm 123</room><instructor>Barna Saha</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>Big Data brings us to interesting times and promises to revolutionize our society from business to government, from healthcare to academia. As we walk through this digitized age of exploded data, there is an increasing demand to develop unified toolkits for data processing and analysis. In this course our main goal is to rigorously study the mathematical foundation of big data processing, develop algorithms and learn how to analyze them. Specific Topics to be covered include clustering, estimating statistical properties of data, near neighbor search, algorithms over massive graphs and social networks, learning algorithms, and randomized algorithms.  This course counts as a CS Elective for the CS Major (BS or BA).</description></item><item><name>COMPSCI  514 - 02   Algorithms for Data Science</name><class_number>61145</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TuTh 11:30AM - 12:45PM</date><room>Lederle Grad Res Tower rm 123</room><instructor>Barna Saha</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>Big Data brings us to interesting times and promises to revolutionize our society from business to government, from healthcare to academia. As we walk through this digitized age of exploded data, there is an increasing demand to develop unified toolkits for data processing and analysis. In this course our main goal is to rigorously study the mathematical foundation of big data processing, develop algorithms and learn how to analyze them. Specific Topics to be covered include clustering, estimating statistical properties of data, near neighbor search, algorithms over massive graphs and social networks, learning algorithms, and randomized algorithms.  This course counts as a CS Elective for the CS Major (BS or BA).</description></item><item><name>COMPSCI  529 - 01   Software Engin Proj Management</name><class_number>55428</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>MoWe 2:30PM - 3:45PM</date><room>Goessmann Lab Addtn rm 151</room><instructor>Gordon Anderson</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Instructor Consent Required</add_consent><description>Practical experience in the management of software development projects.  Managing people, coaching, mentoring, planning, scheduling, evaluation, negotiation, and expectation management are explored.  The focus is on the power of communication.</description></item><item><name>COMPSCI  529 - 01AA   Software Engin Proj Management</name><class_number>55463</class_number><career>*University</career><grading> </grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>We 1:25PM - 2:15PM</date><room>Engineering Laboratory rm 323</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>Practical experience in the management of software development projects.  Managing people, coaching, mentoring, planning, scheduling, evaluation, negotiation, and expectation management are explored.  The focus is on the power of communication.</description></item><item><name>COMPSCI  529 - 01AB   Software Engin Proj Management</name><class_number>55479</class_number><career>*University</career><grading> </grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Mo 4:00PM - 5:00PM</date><room>Hasbrouck Lab Add room 104B</room><instructor>Gordon Anderson</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Instructor Consent Required</add_consent><description>Practical experience in the management of software development projects.  Managing people, coaching, mentoring, planning, scheduling, evaluation, negotiation, and expectation management are explored.  The focus is on the power of communication.</description></item><item><name>COMPSCI  529 - 02   Software Engin Proj Management</name><class_number>55503</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>MoWe 2:30PM - 3:45PM</date><room>Goessmann lab Addition 152</room><instructor>Neena Thota</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Instructor Consent Required</add_consent><description>Practical experience in the management of software development projects.  Managing people, coaching, mentoring, planning, scheduling, evaluation, negotiation, and expectation management are explored.  The focus is on the power of communication.</description></item><item><name>COMPSCI  529 - 02AA   Software Engin Proj Management</name><class_number>55504</class_number><career>*University</career><grading> </grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>We 12:20PM - 1:10PM</date><room>Tobin Hall room 204</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>Practical experience in the management of software development projects.  Managing people, coaching, mentoring, planning, scheduling, evaluation, negotiation, and expectation management are explored.  The focus is on the power of communication.</description></item><item><name>COMPSCI  529 - 02AB   Software Engin Proj Management</name><class_number>55505</class_number><career>*University</career><grading> </grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Mo 4:00PM - 5:00PM</date><room>Lederle Grad Res Ctr 353B</room><instructor>Neena Thota</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Instructor Consent Required</add_consent><description>Practical experience in the management of software development projects.  Managing people, coaching, mentoring, planning, scheduling, evaluation, negotiation, and expectation management are explored.  The focus is on the power of communication.</description></item><item><name>COMPSCI  535 - 01   Computer Architecture</name><class_number>55509</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>MoWe 9:05AM - 10:20AM</date><room>Computer Science Bldg rm 140</room><instructor>Charles Weems</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>The structure of digital computers from the logic level to the system level. Topics include: the design of components such as arithmetic units; the organization of sub-systems such as the memory; the interplay between hardware and software; the von Neumann architecture and its performance enhancements such as cache memory, instruction and data pipelines, coprocessors, and parallelism.Prerequisite for undergraduates: COMPSCI 391IB/335 with a grade of C or better.</description></item><item><name>COMPSCI  535 - 02   Computer Architecture</name><class_number>55510</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>MoWe 9:05AM - 10:20AM</date><room>Computer Science Bldg rm 140</room><instructor>Charles Weems</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>The structure of digital computers from the logic level to the system level. Topics include: the design of components such as arithmetic units; the organization of sub-systems such as the memory; the interplay between hardware and software; the von Neumann architecture and its performance enhancements such as cache memory, instruction and data pipelines, coprocessors, and parallelism.Prerequisite for undergraduates: COMPSCI 391IB/335 with a grade of C or better.</description></item><item><name>COMPSCI  589 - 01   Machine Learning</name><class_number>55491</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TuTh 10:00AM - 11:15AM</date><room>Goessmann Lab. Add rm 64</room><instructor>David Jensen</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>Introduction to core machine learning models and algorithms for classification, regression, dimensionality reduction and clustering with a focus on real-world applications in a variety of computing contexts (desktop/cluster/cloud). Requires the use of Python.</description></item><item><name>COMPSCI  589 - 02   Machine Learning</name><class_number>55492</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TuTh 10:00AM - 11:15AM</date><room>Goessmann Lab. Add rm 64</room><instructor>David Jensen</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>Introduction to core machine learning models and algorithms for classification, regression, dimensionality reduction and clustering with a focus on real-world applications in a variety of computing contexts (desktop/cluster/cloud). Requires the use of Python.</description></item><item><name>COMPSCI  590B - 01   DetectingInterference/Networks</name><class_number>61240</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>MoWe 9:05AM - 10:20AM</date><room>Computer Science Bldg rm 142</room><instructor>Phillipa Gill</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>This course will cover topics related to the broad issue of detecting and measuring network interference. This will include topics such as traffic differentiation, network neutrality, surveillance, and blocking/censorship of content. The course will focus on network measurement tools and techniques in the context of detecting and observing manipulations and interference with network traffic. When relevant, historical and ethical/legal context will be discussed in relation to these topics.  This course counts as a CS Elective for the CS Major (BS and BA).</description></item><item><name>COMPSCI  590B - 02   DetectingInterference/Networks</name><class_number>61241</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>MoWe 9:05AM - 10:20AM</date><room>Computer Science Bldg rm 142</room><instructor>Phillipa Gill</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>This course will cover topics related to the broad issue of detecting and measuring network interference. This will include topics such as traffic differentiation, network neutrality, surveillance, and blocking/censorship of content. The course will focus on network measurement tools and techniques in the context of detecting and observing manipulations and interference with network traffic. When relevant, historical and ethical/legal context will be discussed in relation to these topics.  This course counts as a CS Elective for the CS Major (BS and BA).</description></item><item><name>COMPSCI  590C - 01   Human Computer Interaction</name><class_number>60945</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TBA</date><room>On-Line</room><instructor>Eva Hudlicka</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>This course will provide an in-depth introduction to Human Computer Interaction (HCI). The topics will include: HCI history; discussion of human capabilities and limitations (perceptual, cognitive, physical), human error, and human emotions, and their relevance for HCI; generic principles of design and the principles guiding user interface and interaction design; design of WIMP (windows, icons, menus, pointing) and direct-manipulation user interfaces; virtual and augmented reality and novel modes of interaction; approaches to prototyping (storyboarding, paper prototyping, and low- and high-fidelity user interface prototyping); cognitive modeling; usability evaluation; affective HCI and current trends in HCI; as well as ethical considerations.</description></item><item><name>COMPSCI  590C - 01AA   Human Computer Interaction</name><class_number>61963</class_number><career>*University</career><grading> </grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Mo 4:00PM - 5:15PM</date><room>Engineering Laboratory rm 323</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>This course will provide an in-depth introduction to Human Computer Interaction (HCI). The topics will include: HCI history; discussion of human capabilities and limitations (perceptual, cognitive, physical), human error, and human emotions, and their relevance for HCI; generic principles of design and the principles guiding user interface and interaction design; design of WIMP (windows, icons, menus, pointing) and direct-manipulation user interfaces; virtual and augmented reality and novel modes of interaction; approaches to prototyping (storyboarding, paper prototyping, and low- and high-fidelity user interface prototyping); cognitive modeling; usability evaluation; affective HCI and current trends in HCI; as well as ethical considerations.</description></item><item><name>COMPSCI  590C - 02   Human Computer Interaction</name><class_number>60946</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TBA</date><room>On-Line</room><instructor>Eva Hudlicka</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>This course will provide an in-depth introduction to Human Computer Interaction (HCI). The topics will include: HCI history; discussion of human capabilities and limitations (perceptual, cognitive, physical), human error, and human emotions, and their relevance for HCI; generic principles of design and the principles guiding user interface and interaction design; design of WIMP (windows, icons, menus, pointing) and direct-manipulation user interfaces; virtual and augmented reality and novel modes of interaction; approaches to prototyping (storyboarding, paper prototyping, and low- and high-fidelity user interface prototyping); cognitive modeling; usability evaluation; affective HCI and current trends in HCI; as well as ethical considerations.</description></item><item><name>COMPSCI  590C - 02AA   Human Computer Interaction</name><class_number>61964</class_number><career>*University</career><grading> </grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>We 4:00PM - 5:15PM</date><room>Engineering Laboratory rm 323</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>This course will provide an in-depth introduction to Human Computer Interaction (HCI). The topics will include: HCI history; discussion of human capabilities and limitations (perceptual, cognitive, physical), human error, and human emotions, and their relevance for HCI; generic principles of design and the principles guiding user interface and interaction design; design of WIMP (windows, icons, menus, pointing) and direct-manipulation user interfaces; virtual and augmented reality and novel modes of interaction; approaches to prototyping (storyboarding, paper prototyping, and low- and high-fidelity user interface prototyping); cognitive modeling; usability evaluation; affective HCI and current trends in HCI; as well as ethical considerations.</description></item><item><name>COMPSCI  590F - 01   Digital Forensics</name><class_number>55550</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TuTh 10:00AM - 11:15AM</date><room>Hasbrouck Lab Add room 124</room><instructor>Marc Liberatore</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>This course offers a broad introduction to the forensic investigation of digital devices. We cover the preservation, recovery, harvesting, and courtroom presentation of information from file systems, operating systems, networks, database systems applications, media files, and embedded systems. The primary goal of the class is to understand why and from where information is recoverable in these systems. We also cover relevant issues from criminology, law, and the study of privacy.</description></item><item><name>COMPSCI  590IV - 01   Intelligent Visual Computing</name><class_number>61810</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Fr 11:15AM - 1:45PM</date><room>Computer Science Bldg rm 142</room><instructor>Evangelos Kalogerakis</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>Intelligent visual computing is an emerging new field that seeks to combine modern trends in machine learning, computer graphics, computer vision to intelligently process, analyze and synthesize 2D/3D visual data. The course will start by covering 2D image and 3D shape representations, classification and regression techniques, and the fundamentals of deep learning. The course will then provide an in-depth background on analysis and synthesis of images and shapes with deep learning, in particular neural networks and probabilistic graphical models. This course counts as a CS Elective toward the CS major (BA or BS).</description></item><item><name>COMPSCI  590IV - 02   Intelligent Visual Computing</name><class_number>61811</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Fr 11:15AM - 1:45PM</date><room>Computer Science Bldg rm 142</room><instructor>Evangelos Kalogerakis</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>Intelligent visual computing is an emerging new field that seeks to combine modern trends in machine learning, computer graphics, computer vision to intelligently process, analyze and synthesize 2D/3D visual data. The course will start by covering 2D image and 3D shape representations, classification and regression techniques, and the fundamentals of deep learning. The course will then provide an in-depth background on analysis and synthesis of images and shapes with deep learning, in particular neural networks and probabilistic graphical models. This course counts as a CS Elective toward the CS major (BA or BS).</description></item><item><name>COMPSCI  590M - 01   Introduction to Simulation</name><class_number>62570</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TuTh 1:00PM - 2:15PM</date><room>Computer Science Bldg rm 142</room><instructor>Peter Haas</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>Using computers for system design and decision making under uncertainty. Monte Carlo methods, modeling discrete-event stochastic systems, random number generation, time-advance mechanisms, output analysis, simulation-based optimization. This course counts as a CS Elective toward the CS major (BA or BS).</description></item><item><name>COMPSCI  590M - 02   Introduction to Simulation</name><class_number>62571</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TuTh 1:00PM - 2:15PM</date><room>Computer Science Bldg rm 142</room><instructor>Peter Haas</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>Using computers for system design and decision making under uncertainty. Monte Carlo methods, modeling discrete-event stochastic systems, random number generation, time-advance mechanisms, output analysis, simulation-based optimization. This course counts as a CS Elective toward the CS major (BA or BS).</description></item><item><name>COMPSCI  590U - 01   Mobile and Ubiquit. Computing</name><class_number>62729</class_number><units>3</units><career>*University</career><grading>Graduate School Letter Grading</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TuTh 8:30AM - 9:45AM</date><room>Computer Science Bldg rm 142</room><instructor>Tauhidur Rahman</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>This course will introduce students to the field of Ubiquitous Computing - an emerging CS research area that draws from Machine Learning, Signal Processing, Sensor Systems, Hardware Prototyping, Mobile Computing, Embedded Systems, and various application areas including Human Computer Interaction, Sustainability, Medicine, as well as from Psychology, Economics and Sociology. We will discuss various Ubicomp solutions to real-world problems, advanced prototyping techniques, data collection approaches, signal representation, modeling, and evaluation.  This course counts as a CS Elective toward the CS major (BA or BS).</description></item><item><name>COMPSCI  590U - 02   Mobile and Ubiquit. Computing</name><class_number>62730</class_number><units>3</units><career>*University</career><grading>Graduate School Letter Grading</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TuTh 8:30AM - 9:45AM</date><room>Computer Science Bldg rm 142</room><instructor>Tauhidur Rahman</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>This course will introduce students to the field of Ubiquitous Computing - an emerging CS research area that draws from Machine Learning, Signal Processing, Sensor Systems, Hardware Prototyping, Mobile Computing, Embedded Systems, and various application areas including Human Computer Interaction, Sustainability, Medicine, as well as from Psychology, Economics and Sociology. We will discuss various Ubicomp solutions to real-world problems, advanced prototyping techniques, data collection approaches, signal representation, modeling, and evaluation.  This course counts as a CS Elective toward the CS major (BA or BS).</description></item><item><name>COMPSCI  590V - 01   DataVisualization&amp;amp;Exploration</name><class_number>55541</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>MoWeFr 1:25PM - 2:15PM</date><room>Goessmann Laboratory room 20</room><instructor>John Fallon</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>In this course, students will learn the fundamental algorithmic and design principles of visualizing and exploring complex data. The course will cover multiple aspects of data presentation including human perception and design theory; algorithms for exploring patterns in data such as topic modeling, clustering, and dimensionality reduction. A wide range of statistical graphics and information visualization techniques will be covered. We will explore numerical data, relational data, temporal data, spatial data, graphs and text. Hands-on projects will be based on Python or JavaScript with D3. This course counts as a CS Elective toward the CS major (BA/BS).</description></item><item><name>COMPSCI  590V - 02   DataVisualization&amp;amp;Exploration</name><class_number>55545</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>MoWeFr 1:25PM - 2:15PM</date><room>Goessmann Laboratory room 20</room><instructor>John Fallon</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>In this course, students will learn the fundamental algorithmic and design principles of visualizing and exploring complex data. The course will cover multiple aspects of data presentation including human perception and design theory; algorithms for exploring patterns in data such as topic modeling, clustering, and dimensionality reduction. A wide range of statistical graphics and information visualization techniques will be covered. We will explore numerical data, relational data, temporal data, spatial data, graphs and text. Hands-on projects will be based on Python or JavaScript with D3. This course counts as a CS Elective toward the CS major (BA/BS).</description></item><item><name>COMPSCI  596 - 01   Independent Study</name><class_number>55429</class_number><units>1 - 6</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TBA</date><room>TBA</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>Not available at this time</description></item><item><name>COMPSCI  603 - 01   Robotics</name><class_number>55434</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TuTh 1:00PM - 2:15PM</date><room>Lederle Grad Res Ctr rm A310</room><instructor>Roderic Grupen</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>An advanced course in robotics that covers mechanisms (kinematics and dynamics), actuators, sensors, feedback control, and signal processing. The target is to provide a general understanding of sensorimotor systems that can be related to machine learning and other disciplines.  Relationships to biological systems will be highlighted. Programming exercises will accumulate code for a simulated mobile manipulator and students will pit their robots against those of their classmates.</description></item><item><name>COMPSCI  611 - 01   Advanced Algorithms</name><class_number>60943</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TuTh 2:30PM - 3:45PM</date><room>Lederle Grad Res Tower rm 123</room><instructor>Ramesh Sitaraman</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>The design and analysis of efficient algorithms for important computational problems. Paradigms for algorithm design including Divide and Conquer, Greedy Algorithms, Dynamic Programming; and, the use of Randomness and Parallelism in algorithms. Algorithms for Sorting and Searching, Graph Algorithms, Approximation Algorithms for NP Complete Problems, and others. Prerequisites: The mathematical maturity expected of incoming Computer Science graduate students, knowledge of algorithms at the level of COMPSCI 311.</description></item><item><name>COMPSCI  621 - 01   Adv S/W Eng: Analysis and Eval</name><class_number>55521</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TuTh 10:00AM - 11:15AM</date><room>Computer Science Bldg rm 142</room><instructor>Yuriy Brun</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>The current best testing and analysis practices; emerging new approaches, going beyond the testing of programs to include the testing and analysis of all software artifacts across the lifecycle.</description></item><item><name>COMPSCI  630 - 01   Systems</name><class_number>55527</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>MoWe 4:00PM - 5:15PM</date><room>Computer Science Bldg rm 142</room><instructor>Emery Berger</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>This class is an in-depth introduction to systems, focusing on principles of system design that cross-cut numerous systems artifacts, including operating systems, databases, runtime systems, and architecture. We will cover all levels of the "system stack", from chips to distributed systems.  This course may be used to satisfy systems core requirements.</description></item><item><name>COMPSCI  645 - 01   DatabaseDesign&amp;amp;Implementation</name><class_number>55528</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>MoWe 2:30PM - 3:45PM</date><room>Hasbrouck Lab Add room 124</room><instructor>Alexandra Meliou, Yanlei Diao</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>Covers topics such as the relational model,  query languages, database design;  storage and indexing, query processing and optimization,  transaction management;  XML data management; information integration; data stream systems; database security.</description></item><item><name>COMPSCI  650 - 01   Applied Information Theory</name><class_number>60944</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TuTh 4:00PM - 5:15PM</date><room>Engineering Laboratory rm 303</room><instructor>Arya Mazumdar</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>This course will introduce the basic concepts of Information Theory: entropy, relative entropy, mutual information, channel capacity, and rate distortion.  Applications, rather than proofs, will be emphasized.  In addition, the statistical problem of computing information theoretic quantities from data will be emphasized. Non-parametric and semi-parametric statistical models will also be covered.</description></item><item><name>COMPSCI  660 - 01   Advanced Information Assurance</name><class_number>55542</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TuTh 11:30AM - 12:45PM</date><room>Computer Science Bldg rm 142</room><instructor>Amir Houmansadr</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>This course provides an in-depth examination of the fundamental principles of information assurance: authentication, integrity, confidentiality of distributed systems, network security, malware, privacy, intrusion detection, intellectual property, and protection.  Prerequisite:  CMPSCI 460 (Introduction to Computer and Network Security), or 466 (Applied Cryptography).</description></item><item><name>COMPSCI  677 - 01   Distributed&amp;amp;Operating Systems</name><class_number>55473</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>MoWe 2:30PM - 3:45PM</date><room>Computer Science Bldg rm 142</room><instructor>Prashant Shenoy</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>An in-depth examination of principles of distributed operating systems. Topics include processes and threads, concurrent programming, distributed interprocess communication, distributed process scheduling, shared virtual memory, distributed file systems. MACH.  Familiarity with an undergraduate course on operating systems (CMPSCI 377 or equivalent) is helpful.</description></item><item><name>COMPSCI  677 - 02   Distributed&amp;amp;Operating Systems</name><class_number>55476</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TBA</date><room>On-Line</room><instructor>Prashant Shenoy</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>An in-depth examination of principles of distributed operating systems. Topics include processes and threads, concurrent programming, distributed interprocess communication, distributed process scheduling, shared virtual memory, distributed file systems. MACH.  Familiarity with an undergraduate course on operating systems (CMPSCI 377 or equivalent) is helpful.</description></item><item><name>COMPSCI  682 - 01   Neural Networks: Modern Intro</name><class_number>61974</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TuTh 8:30AM - 9:45AM</date><room>Hasbrouck Laboratory room 134</room><instructor>Erik Learned-Miller</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>This course will focus on modern, practical methods for deep learning. The course will begin with a description of simple classifiers such as perceptrons and logistic regression classifiers, and move on to standard neural networks, convolutional neural networks, and some elements of recurrent neural networks, such as long short-term memory networks (LSTMs).  The emphasis will be on understanding the basics and on practical application more than on theory. Most applications will be in computer vision, but we will make an effort to cover some natural language processing (NLP) applications as well, contingent upon TA support. The current plan is to use Python and associated packages such as Numpy and TensorFlow.  Prerequisites include Linear Algebra, Probability and Statistics, and Multivariate Calculus. All assignments will be in the Python programming language.</description></item><item><name>COMPSCI  683 - 01   Artificial Intelligence</name><class_number>55511</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TuTh 10:00AM - 11:15AM</date><room>South College Room W245</room><instructor>Shlomo Zilberstein</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>In-depth introduction to Artificial Intelligence concentrating on aspects of intelligent agent construction. Topics include: situated agents,advanced search and problem-solving techniques, principles of knowledge representation and reasoning, reasoning under uncertainty,  perception and action, automated planning, and learning.</description></item><item><name>COMPSCI  688 - 01   Probabilistic Graphical Models</name><class_number>55465</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TuTh 1:00PM - 2:15PM</date><room>Hasbrouck Lab Add room 124</room><instructor>Ben Marlin</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>This course will cover Bayesian and Markov networks and their dynamic and relational extensions; exact and approximate inference methods; estimation of both the parameters and structure of graphical models.</description></item><item><name>COMPSCI  690B - 01   DetectingInterference/Networks</name><class_number>61242</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>MoWe 9:05AM - 10:20AM</date><room>Computer Science Bldg rm 142</room><instructor>Phillipa Gill</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>This course will cover topics related to the broad issue of detecting and measuring network interference. This will include topics such as traffic differentiation, network neutrality, surveillance, and blocking/censorship of content. The course will focus on network measurement tools and techniques in the context of detecting and observing manipulations and interference with network traffic. When relevant, historical and ethical/legal context will be discussed in relation to these topics.</description></item><item><name>COMPSCI  690IV - 01   Intelligent Visual Computing</name><class_number>61142</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Fr 11:15AM - 1:45PM</date><room>Computer Science Bldg rm 142</room><instructor>Evangelos Kalogerakis</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>Intelligent visual computing is an emerging new field that seeks to combine modern trends in machine learning, computer graphics, computer vision to intelligently process, analyze and synthesize 2D/3D visual data. The course will start by covering 2D image and 3D shape representations, classification and regression techniques, and the fundamentals of deep learning. The course will then provide an in-depth background on analysis and synthesis of images and shapes with deep learning, in particular neural networks and probabilistic graphical models.</description></item><item><name>COMPSCI  690N - 01   Adv Natural Language Processng</name><class_number>55551</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TuTh 2:30PM - 3:45PM</date><room>Engineering Laboratory rm 303</room><instructor>Brendan O'Connor</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>This course covers a broad range of advanced level topics in natural language processing. It is intended for graduate students in computer science who have familiarity with machine learning fundamentals. It may also be appropriate for computationally sophisticated students in linguistics and related areas. Topics include probabilistic models of language, computationally tractable linguistic representations for syntax and semantics, and selected topics in discourse and text mining. After completing the course, students should be able to read and evaluate current NLP research papers.</description></item><item><name>COMPSCI  690P - 01   Secure Distributed Systems</name><class_number>62577</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TBA</date><room>On-Line</room><instructor>Brian Levine</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>This is a class devoted to the study of securing distributed systems, with blockchain-based cryptocurrencies serving as our real platform of interest. We'll start with the fundamentals of Lamport's, Fischer's, and Douceur's results that fence-in all consensus system, and discuss Byzantine fault tolerance.  We'll also look at the efficiency of the network architectures for peer-to-peer/distributed system communication and attacks on their security, such as denial of service attacks. And we'll review relevant applied cryptography such as elliptical curves. We'll discuss in detail the mechanisms of Bitcoin and Ethereum and we'll program distributed applications for Ethereum. Other topics include economics and finance. The course is based on a "flipped classroom."</description></item><item><name>COMPSCI  690P - 01AA   Secure Distributed Systems</name><class_number>62578</class_number><career>*University</career><grading> </grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>We 2:30PM - 3:45PM</date><room>Lederle Grad Res. Ctr rm A201</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><description>This is a class devoted to the study of securing distributed systems, with blockchain-based cryptocurrencies serving as our real platform of interest. We'll start with the fundamentals of Lamport's, Fischer's, and Douceur's results that fence-in all consensus system, and discuss Byzantine fault tolerance.  We'll also look at the efficiency of the network architectures for peer-to-peer/distributed system communication and attacks on their security, such as denial of service attacks. And we'll review relevant applied cryptography such as elliptical curves. We'll discuss in detail the mechanisms of Bitcoin and Ethereum and we'll program distributed applications for Ethereum. Other topics include economics and finance. The course is based on a "flipped classroom."</description></item><item><name>COMPSCI  692N - 01   S-NovelComputatnlHardware&amp;amp;Mach</name><class_number>62238</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Th 4:00PM - 5:15PM</date><room>Computer Science Bldg rm 140</room><instructor>Edward Rietman</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>This seminar will consist of readings and discussions on novel computational systems and machine learning. Will include oscillatory computing, DNA computing, quantum computing, molecular computing, non-Turing architecture, among others. We will also look at novel machine learning algorithms.</description></item><item><name>COMPSCI  692P - 01   S- Progr. Lang &amp;amp; Syst at Mass</name><class_number>62721</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>We 2:30PM - 3:45PM</date><room>Lederle Grad Res Tower Rm 171</room><instructor>Arjun Guha, Emery Berger, Yuriy Brun</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>This seminar covers research spanning programming languages, software engineering, security and systems.</description></item><item><name>COMPSCI  692P - 02   S- Progr. Lang &amp;amp; Syst at Mass</name><class_number>62722</class_number><units>1</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>We 2:30PM - 3:45PM</date><room>Lederle Grad Res Tower Rm 171</room><instructor>Arjun Guha, Emery Berger, Yuriy Brun</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>This seminar covers research spanning programming languages, software engineering, security and systems.</description></item><item><name>COMPSCI  696 - 01   Independent Study</name><class_number>55430</class_number><units>1 - 6</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TBA</date><room>TBA</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>Not available at this time</description></item><item><name>COMPSCI  696A - 01   IS- Algebraic Graph Theory</name><class_number>62773</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TuTh 10:00AM - 11:15AM</date><room>Computer Science Bldg rm 140</room><instructor>David Barrington</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Instructor Consent Required</add_consent><description>Fast-paced and self-directed study of topics in Algebraic Graph Theory, using the text by Godsil and Royle.  Students will present material from the book to one another in weekly class meeting, and prepare a final project.</description></item><item><name>COMPSCI  696B - 01   IS- Bounds</name><class_number>63003</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TBA</date><room>TBA</room><instructor>Erik Learned-Miller</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Instructor Consent Required</add_consent><description>To derive tight probabilistic bounds on statistical properties such as mean, median, variance, etc. of samples drawn from an unknown probability distribution.</description></item><item><name>COMPSCI  696C - 01   IS- ChaosComputerPerformance</name><class_number>62694</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Fr 4:00PM - 5:00PM</date><room>Computer Science Bldg rm 303</room><instructor>Eliot Moss</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Instructor Consent Required</add_consent><description>Students will use linear and machine learning methods to analyze predictabilityof computer performance from traces of program executions.  Requires previous background in machine learning.</description></item><item><name>COMPSCI  696D - 01   IS-Face Detection Using Hard N</name><class_number>63007</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TBA</date><room>TBA</room><instructor>Erik Learned-Miller</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Instructor Consent Required</add_consent><description>Mine hard negatives of object/faces using proposed algorithm and create a dataset to improve state-of-the-art object/face detections such as faster R-CNN.  Evaluate the the model performance on FDB dataset.</description></item><item><name>COMPSCI  696DS - 01   IS- Data Science</name><class_number>62116</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Fr 2:00PM - 4:00PM</date><room>Computer Science Bldg rm 142</room><instructor>Andrew McCallum</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Instructor Consent Required</add_consent><description>The goal of this course is to provide Professional Masters students with  industry mentorship and real-world data science training.  Beyond-classroom educational opportunities are an excellent way to gain practical experience on a substantial project, to learn advanced skills, to collaborate with a professional PhD researcher, to form a connection to a data science company, and to work in a team with other graduate students.  Industry partners propose semester-long data science projects.  Students form three-to-five-person teams, each of which work on one project throughout the semester, under the guidance of their industry mentor, additional PhD student mentors, and the course faculty instructor.  Furthermore, in weekly class meetings all students receive professional development education, data science hardware and software infrastructure training, data science research presentations, and career advice.  Student teams gain valuable oral presentation experience and feedback by regularly presenting their work-in-progress, as well as a final public presentation of their project at the end of the semester.  Advantages of these industry relationships often include access to rich industry-scale data, learning about real-world problems, and making industry connections useful for the future.</description></item><item><name>COMPSCI  696DS - 02   IS- Data Science</name><class_number>62131</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><topic>PolysemousWordEmbeddings&amp;amp;Sentm</topic><date>Fr 2:00PM - 4:00PM</date><room>Computer Science Bldg rm 142</room><instructor>Andrew McCallum</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Instructor Consent Required</add_consent><description>The goal of this course is to provide Professional Masters students with  industry mentorship and real-world data science training.  Beyond-classroom educational opportunities are an excellent way to gain practical experience on a substantial project, to learn advanced skills, to collaborate with a professional PhD researcher, to form a connection to a data science company, and to work in a team with other graduate students.  Industry partners propose semester-long data science projects.  Students form three-to-five-person teams, each of which work on one project throughout the semester, under the guidance of their industry mentor, additional PhD student mentors, and the course faculty instructor.  Furthermore, in weekly class meetings all students receive professional development education, data science hardware and software infrastructure training, data science research presentations, and career advice.  Student teams gain valuable oral presentation experience and feedback by regularly presenting their work-in-progress, as well as a final public presentation of their project at the end of the semester.  Advantages of these industry relationships often include access to rich industry-scale data, learning about real-world problems, and making industry connections useful for the future.</description></item><item><name>COMPSCI  696DS - 03   IS- Data Science</name><class_number>62132</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><topic>Citation Field Extraction</topic><date>Fr 2:00PM - 4:00PM</date><room>Computer Science Bldg rm 142</room><instructor>Andrew McCallum</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Instructor Consent Required</add_consent><description>The goal of this course is to provide Professional Masters students with  industry mentorship and real-world data science training.  Beyond-classroom educational opportunities are an excellent way to gain practical experience on a substantial project, to learn advanced skills, to collaborate with a professional PhD researcher, to form a connection to a data science company, and to work in a team with other graduate students.  Industry partners propose semester-long data science projects.  Students form three-to-five-person teams, each of which work on one project throughout the semester, under the guidance of their industry mentor, additional PhD student mentors, and the course faculty instructor.  Furthermore, in weekly class meetings all students receive professional development education, data science hardware and software infrastructure training, data science research presentations, and career advice.  Student teams gain valuable oral presentation experience and feedback by regularly presenting their work-in-progress, as well as a final public presentation of their project at the end of the semester.  Advantages of these industry relationships often include access to rich industry-scale data, learning about real-world problems, and making industry connections useful for the future.</description></item><item><name>COMPSCI  696DS - 04   IS- Data Science</name><class_number>62133</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>Fr 2:00PM - 4:00PM</date><room>Computer Science Bldg rm 142</room><instructor>Andrew McCallum</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Instructor Consent Required</add_consent><description>The goal of this course is to provide Professional Masters students with  industry mentorship and real-world data science training.  Beyond-classroom educational opportunities are an excellent way to gain practical experience on a substantial project, to learn advanced skills, to collaborate with a professional PhD researcher, to form a connection to a data science company, and to work in a team with other graduate students.  Industry partners propose semester-long data science projects.  Students form three-to-five-person teams, each of which work on one project throughout the semester, under the guidance of their industry mentor, additional PhD student mentors, and the course faculty instructor.  Furthermore, in weekly class meetings all students receive professional development education, data science hardware and software infrastructure training, data science research presentations, and career advice.  Student teams gain valuable oral presentation experience and feedback by regularly presenting their work-in-progress, as well as a final public presentation of their project at the end of the semester.  Advantages of these industry relationships often include access to rich industry-scale data, learning about real-world problems, and making industry connections useful for the future.</description></item><item><name>COMPSCI  696DS - 05   IS- Data Science</name><class_number>62134</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><topic>Joint UMLS Entitly Recognition</topic><date>Fr 2:00PM - 4:00PM</date><room>Computer Science Bldg rm 142</room><instructor>Andrew McCallum</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Instructor Consent Required</add_consent><description>The goal of this course is to provide Professional Masters students with  industry mentorship and real-world data science training.  Beyond-classroom educational opportunities are an excellent way to gain practical experience on a substantial project, to learn advanced skills, to collaborate with a professional PhD researcher, to form a connection to a data science company, and to work in a team with other graduate students.  Industry partners propose semester-long data science projects.  Students form three-to-five-person teams, each of which work on one project throughout the semester, under the guidance of their industry mentor, additional PhD student mentors, and the course faculty instructor.  Furthermore, in weekly class meetings all students receive professional development education, data science hardware and software infrastructure training, data science research presentations, and career advice.  Student teams gain valuable oral presentation experience and feedback by regularly presenting their work-in-progress, as well as a final public presentation of their project at the end of the semester.  Advantages of these industry relationships often include access to rich industry-scale data, learning about real-world problems, and making industry connections useful for the future.</description></item><item><name>COMPSCI  696DS - 06   IS- Data Science</name><class_number>62777</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><topic>Large-scale Commonsense</topic><date>Fr 2:00PM - 4:00PM</date><room>Computer Science Bldg rm 142</room><instructor>Andrew McCallum</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Instructor Consent Required</add_consent><description>The goal of this course is to provide Professional Masters students with  industry mentorship and real-world data science training.  Beyond-classroom educational opportunities are an excellent way to gain practical experience on a substantial project, to learn advanced skills, to collaborate with a professional PhD researcher, to form a connection to a data science company, and to work in a team with other graduate students.  Industry partners propose semester-long data science projects.  Students form three-to-five-person teams, each of which work on one project throughout the semester, under the guidance of their industry mentor, additional PhD student mentors, and the course faculty instructor.  Furthermore, in weekly class meetings all students receive professional development education, data science hardware and software infrastructure training, data science research presentations, and career advice.  Student teams gain valuable oral presentation experience and feedback by regularly presenting their work-in-progress, as well as a final public presentation of their project at the end of the semester.  Advantages of these industry relationships often include access to rich industry-scale data, learning about real-world problems, and making industry connections useful for the future.</description></item><item><name>COMPSCI  696DS - 07   IS- Data Science</name><class_number>62778</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><topic>Analyzing Users within Orgzns</topic><date>Fr 2:00PM - 4:00PM</date><room>Computer Science Bldg rm 142</room><instructor>Andrew McCallum</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Instructor Consent Required</add_consent><description>The goal of this course is to provide Professional Masters students with  industry mentorship and real-world data science training.  Beyond-classroom educational opportunities are an excellent way to gain practical experience on a substantial project, to learn advanced skills, to collaborate with a professional PhD researcher, to form a connection to a data science company, and to work in a team with other graduate students.  Industry partners propose semester-long data science projects.  Students form three-to-five-person teams, each of which work on one project throughout the semester, under the guidance of their industry mentor, additional PhD student mentors, and the course faculty instructor.  Furthermore, in weekly class meetings all students receive professional development education, data science hardware and software infrastructure training, data science research presentations, and career advice.  Student teams gain valuable oral presentation experience and feedback by regularly presenting their work-in-progress, as well as a final public presentation of their project at the end of the semester.  Advantages of these industry relationships often include access to rich industry-scale data, learning about real-world problems, and making industry connections useful for the future.</description></item><item><name>COMPSCI  696DS - 08   IS- Data Science</name><class_number>62779</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><topic>Machine Learning Based Request</topic><date>Fr 2:00PM - 4:00PM</date><room>Computer Science Bldg rm 142</room><instructor>Andrew McCallum</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Instructor Consent Required</add_consent><description>The goal of this course is to provide Professional Masters students with  industry mentorship and real-world data science training.  Beyond-classroom educational opportunities are an excellent way to gain practical experience on a substantial project, to learn advanced skills, to collaborate with a professional PhD researcher, to form a connection to a data science company, and to work in a team with other graduate students.  Industry partners propose semester-long data science projects.  Students form three-to-five-person teams, each of which work on one project throughout the semester, under the guidance of their industry mentor, additional PhD student mentors, and the course faculty instructor.  Furthermore, in weekly class meetings all students receive professional development education, data science hardware and software infrastructure training, data science research presentations, and career advice.  Student teams gain valuable oral presentation experience and feedback by regularly presenting their work-in-progress, as well as a final public presentation of their project at the end of the semester.  Advantages of these industry relationships often include access to rich industry-scale data, learning about real-world problems, and making industry connections useful for the future.</description></item><item><name>COMPSCI  696DS - 09   IS- Data Science</name><class_number>62780</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><topic>StudentSense DataSet</topic><date>Fr 2:00PM - 4:00PM</date><room>Computer Science Bldg rm 142</room><instructor>Andrew McCallum</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Instructor Consent Required</add_consent><description>The goal of this course is to provide Professional Masters students with  industry mentorship and real-world data science training.  Beyond-classroom educational opportunities are an excellent way to gain practical experience on a substantial project, to learn advanced skills, to collaborate with a professional PhD researcher, to form a connection to a data science company, and to work in a team with other graduate students.  Industry partners propose semester-long data science projects.  Students form three-to-five-person teams, each of which work on one project throughout the semester, under the guidance of their industry mentor, additional PhD student mentors, and the course faculty instructor.  Furthermore, in weekly class meetings all students receive professional development education, data science hardware and software infrastructure training, data science research presentations, and career advice.  Student teams gain valuable oral presentation experience and feedback by regularly presenting their work-in-progress, as well as a final public presentation of their project at the end of the semester.  Advantages of these industry relationships often include access to rich industry-scale data, learning about real-world problems, and making industry connections useful for the future.</description></item><item><name>COMPSCI  696DS - 10   IS- Data Science</name><class_number>62781</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><topic>New Skill Extraction</topic><date>Fr 2:00PM - 4:00PM</date><room>Computer Science Bldg rm 142</room><instructor>Andrew McCallum</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Instructor Consent Required</add_consent><description>The goal of this course is to provide Professional Masters students with  industry mentorship and real-world data science training.  Beyond-classroom educational opportunities are an excellent way to gain practical experience on a substantial project, to learn advanced skills, to collaborate with a professional PhD researcher, to form a connection to a data science company, and to work in a team with other graduate students.  Industry partners propose semester-long data science projects.  Students form three-to-five-person teams, each of which work on one project throughout the semester, under the guidance of their industry mentor, additional PhD student mentors, and the course faculty instructor.  Furthermore, in weekly class meetings all students receive professional development education, data science hardware and software infrastructure training, data science research presentations, and career advice.  Student teams gain valuable oral presentation experience and feedback by regularly presenting their work-in-progress, as well as a final public presentation of their project at the end of the semester.  Advantages of these industry relationships often include access to rich industry-scale data, learning about real-world problems, and making industry connections useful for the future.</description></item><item><name>COMPSCI  696DS - 11   IS- Data Science</name><class_number>62782</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><topic>Comparative Analysis of QA</topic><date>Fr 2:00PM - 4:00PM</date><room>Computer Science Bldg rm 142</room><instructor>Andrew McCallum</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Instructor Consent Required</add_consent><description>The goal of this course is to provide Professional Masters students with  industry mentorship and real-world data science training.  Beyond-classroom educational opportunities are an excellent way to gain practical experience on a substantial project, to learn advanced skills, to collaborate with a professional PhD researcher, to form a connection to a data science company, and to work in a team with other graduate students.  Industry partners propose semester-long data science projects.  Students form three-to-five-person teams, each of which work on one project throughout the semester, under the guidance of their industry mentor, additional PhD student mentors, and the course faculty instructor.  Furthermore, in weekly class meetings all students receive professional development education, data science hardware and software infrastructure training, data science research presentations, and career advice.  Student teams gain valuable oral presentation experience and feedback by regularly presenting their work-in-progress, as well as a final public presentation of their project at the end of the semester.  Advantages of these industry relationships often include access to rich industry-scale data, learning about real-world problems, and making industry connections useful for the future.</description></item><item><name>COMPSCI  696DS - 12   IS- Data Science</name><class_number>62783</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><topic>DrugTargetPrediction/DeepLrng</topic><date>Fr 2:00PM - 4:00PM</date><room>Computer Science Bldg rm 142</room><instructor>Andrew McCallum</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Instructor Consent Required</add_consent><description>The goal of this course is to provide Professional Masters students with  industry mentorship and real-world data science training.  Beyond-classroom educational opportunities are an excellent way to gain practical experience on a substantial project, to learn advanced skills, to collaborate with a professional PhD researcher, to form a connection to a data science company, and to work in a team with other graduate students.  Industry partners propose semester-long data science projects.  Students form three-to-five-person teams, each of which work on one project throughout the semester, under the guidance of their industry mentor, additional PhD student mentors, and the course faculty instructor.  Furthermore, in weekly class meetings all students receive professional development education, data science hardware and software infrastructure training, data science research presentations, and career advice.  Student teams gain valuable oral presentation experience and feedback by regularly presenting their work-in-progress, as well as a final public presentation of their project at the end of the semester.  Advantages of these industry relationships often include access to rich industry-scale data, learning about real-world problems, and making industry connections useful for the future.</description></item><item><name>COMPSCI  696DS - 13   IS- Data Science</name><class_number>62784</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><topic>AnsweringVisualReasoningQuestn</topic><date>Fr 2:00PM - 4:00PM</date><room>Computer Science Bldg rm 142</room><instructor>Andrew McCallum</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Instructor Consent Required</add_consent><description>The goal of this course is to provide Professional Masters students with  industry mentorship and real-world data science training.  Beyond-classroom educational opportunities are an excellent way to gain practical experience on a substantial project, to learn advanced skills, to collaborate with a professional PhD researcher, to form a connection to a data science company, and to work in a team with other graduate students.  Industry partners propose semester-long data science projects.  Students form three-to-five-person teams, each of which work on one project throughout the semester, under the guidance of their industry mentor, additional PhD student mentors, and the course faculty instructor.  Furthermore, in weekly class meetings all students receive professional development education, data science hardware and software infrastructure training, data science research presentations, and career advice.  Student teams gain valuable oral presentation experience and feedback by regularly presenting their work-in-progress, as well as a final public presentation of their project at the end of the semester.  Advantages of these industry relationships often include access to rich industry-scale data, learning about real-world problems, and making industry connections useful for the future.</description></item><item><name>COMPSCI  696DS - 14   IS- Data Science</name><class_number>62820</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><topic>TransferLearning/AnswerRanking</topic><date>Fr 2:00PM - 4:00PM</date><room>Computer Science Bldg rm 142</room><instructor>Andrew McCallum</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Instructor Consent Required</add_consent><description>The goal of this course is to provide Professional Masters students with  industry mentorship and real-world data science training.  Beyond-classroom educational opportunities are an excellent way to gain practical experience on a substantial project, to learn advanced skills, to collaborate with a professional PhD researcher, to form a connection to a data science company, and to work in a team with other graduate students.  Industry partners propose semester-long data science projects.  Students form three-to-five-person teams, each of which work on one project throughout the semester, under the guidance of their industry mentor, additional PhD student mentors, and the course faculty instructor.  Furthermore, in weekly class meetings all students receive professional development education, data science hardware and software infrastructure training, data science research presentations, and career advice.  Student teams gain valuable oral presentation experience and feedback by regularly presenting their work-in-progress, as well as a final public presentation of their project at the end of the semester.  Advantages of these industry relationships often include access to rich industry-scale data, learning about real-world problems, and making industry connections useful for the future.</description></item><item><name>COMPSCI  696F - 01   IS-InfoIntegration&amp;amp;DataPop/OpR</name><class_number>62072</class_number><units>3</units><career>*University</career><grading>Graduate School Letter Grading</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>1:00AM - 1:00AM</date><room>TBA</room><instructor>Andrew McCallum</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Instructor Consent Required</add_consent><description>Analyze the information richness of large scale scientific datasets, run entity resolution on entities within datasets. Extract relevant information from research PDFs from datasets. Evaluate coverage and accuracy of data sets with respects to the CS scientific community.</description></item><item><name>COMPSCI  696PC - 01   IS-Estimating True Paint Color</name><class_number>63004</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TBA</date><room>TBA</room><instructor>Erik Learned-Miller</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Instructor Consent Required</add_consent><description>Estimating true paint formula under varying lighting conditions in the image.</description></item><item><name>COMPSCI  696R - 01   IS-Estimating Camera Rotation</name><class_number>63005</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TBA</date><room>TBA</room><instructor>Erik Learned-Miller</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Instructor Consent Required</add_consent><description>To create an algorithm which can estimate camera rotation in videos with near and far objects</description></item><item><name>COMPSCI  701 - 01   Advanced Topics Computer Sci</name><class_number>55431</class_number><units>6</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TBA</date><room>TBA</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>Advanced Topics in Computer Science Master's Project: Advanced research project in Computer Science.</description></item><item><name>COMPSCI  711 - 01   Parallel Algrthm&amp;amp;Arc</name><class_number>62251</class_number><units>3</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TuTh 8:30AM - 9:45AM</date><room>Computer Science Bldg rm 140</room><instructor>Andrew McGregor</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>An introduction to parallel algorithmics, emphasizing theoretical formulations and developments. The design of application-oriented algorithms in varied environments: idealized shared-memory algorithmic paradigms that ignore communication costs, distributed-memory emulations of shared memory, distributed-memory algorithmic paradigms. Concepts illustrated via important applications. The design of systems-oriented algorithms for: task scheduling, load balancing, message routing, and latency hiding. Prerequisite: COMPSCI 611 or equivalent.</description></item><item><name>COMPSCI  796 - 01   Independent Study</name><class_number>55432</class_number><units>1 - 6</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>TBA</date><room>TBA</room><instructor>Staff</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>Not available at this time</description></item><item><name>COMPSCI  891M - 01   S-Theory of Computation</name><class_number>55445</class_number><units>1</units><career>*University</career><grading>Graduate Letter Grading, with options</grading><gened>None</gened><rap_tap_hlc>(None)</rap_tap_hlc><date>We 12:20PM - 1:10PM</date><room>Computer Science Bldg rm 150</room><instructor>Ramesh Sitaraman</instructor><meet_dates>01/22/2018 - 05/01/2018</meet_dates><add_consent>Department Consent Required</add_consent><description>The theory seminar is a weekly meeting in which topics of interest in the theory of computation - broadly construed - are presented.  This is sometimes new research by visitors or local people.  It is sometimes work in progress, and it is sometimes recent material of others that some of us present in order to learn and share.  This is a one-credit seminar which may be taken repeatedly for credit. May be repeated for credit up to six times.</description></item></items>